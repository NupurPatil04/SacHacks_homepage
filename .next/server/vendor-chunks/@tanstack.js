"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/@tanstack";
exports.ids = ["vendor-chunks/@tanstack"];
exports.modules = {

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/focusManager.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   FocusManager: () => (/* binding */ FocusManager),\n/* harmony export */   focusManager: () => (/* binding */ focusManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\nvar _focused, _cleanup, _setup;\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n// src/focusManager.ts\n\n\nvar FocusManager = (_focused = /*#__PURE__*/new WeakMap(), _cleanup = /*#__PURE__*/new WeakMap(), _setup = /*#__PURE__*/new WeakMap(), class FocusManager extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor() {\n    super();\n    _classPrivateFieldInitSpec(this, _focused, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _cleanup, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _setup, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _setup, onFocus => {\n      if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    });\n  }\n  onSubscribe() {\n    if (!_classPrivateFieldGet(this, _cleanup)) {\n      this.setEventListener(_classPrivateFieldGet(this, _setup));\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      _classPrivateFieldGet(this, _cleanup)?.call(this);\n      _classPrivateFieldSet(this, _cleanup, void 0);\n    }\n  }\n  setEventListener(setup) {\n    _classPrivateFieldSet(this, _setup, setup);\n    _classPrivateFieldGet(this, _cleanup)?.call(this);\n    _classPrivateFieldSet(this, _cleanup, setup(focused => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    }));\n  }\n  setFocused(focused) {\n    const changed = _classPrivateFieldGet(this, _focused) !== focused;\n    if (changed) {\n      _classPrivateFieldSet(this, _focused, focused);\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach(listener => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof _classPrivateFieldGet(this, _focused) === \"boolean\") {\n      return _classPrivateFieldGet(this, _focused);\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n});\nvar focusManager = new FocusManager();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL2ZvY3VzTWFuYWdlci5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7Ozs7QUFBQTtBQUNpRDtBQUNYO0FBQ3RDLElBQUlFLFlBQVksSUFBQUMsUUFBQSxvQkFBQUMsT0FBQSxJQUFBQyxRQUFBLG9CQUFBRCxPQUFBLElBQUFFLE1BQUEsb0JBQUFGLE9BQUEsSUFBRyxNQUFmRixZQUFZLFNBQWlCRiwwREFBWSxDQUFDO0VBSTVDTyxXQUFXQSxDQUFBLEVBQUc7SUFDWixLQUFLLENBQUMsQ0FBQztJQUFDQywwQkFBQSxPQUFBTCxRQUFBO01BQUFNLFFBQUE7TUFBQUMsS0FBQTtJQUFBO0lBQUFGLDBCQUFBLE9BQUFILFFBQUE7TUFBQUksUUFBQTtNQUFBQyxLQUFBO0lBQUE7SUFBQUYsMEJBQUEsT0FBQUYsTUFBQTtNQUFBRyxRQUFBO01BQUFDLEtBQUE7SUFBQTtJQUNSQyxxQkFBQSxLQUFJLEVBQUFMLE1BQUEsRUFBV00sT0FBTyxJQUFLO01BQ3pCLElBQUksQ0FBQ1gsK0NBQVEsSUFBSVksTUFBTSxDQUFDQyxnQkFBZ0IsRUFBRTtRQUN4QyxNQUFNQyxRQUFRLEdBQUdBLENBQUEsS0FBTUgsT0FBTyxDQUFDLENBQUM7UUFDaENDLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsa0JBQWtCLEVBQUVDLFFBQVEsRUFBRSxLQUFLLENBQUM7UUFDNUQsT0FBTyxNQUFNO1VBQ1hGLE1BQU0sQ0FBQ0csbUJBQW1CLENBQUMsa0JBQWtCLEVBQUVELFFBQVEsQ0FBQztRQUMxRCxDQUFDO01BQ0g7TUFDQTtJQUNGLENBQUM7RUFDSDtFQUNBRSxXQUFXQSxDQUFBLEVBQUc7SUFDWixJQUFJLENBQUFDLHFCQUFBLENBQUMsSUFBSSxFQUFBYixRQUFBLENBQVMsRUFBRTtNQUNsQixJQUFJLENBQUNjLGdCQUFnQixDQUFBRCxxQkFBQSxDQUFDLElBQUksRUFBQVosTUFBQSxDQUFPLENBQUM7SUFDcEM7RUFDRjtFQUNBYyxhQUFhQSxDQUFBLEVBQUc7SUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDQyxZQUFZLENBQUMsQ0FBQyxFQUFFO01BQ3hCSCxxQkFBQSxLQUFJLEVBQUFiLFFBQUEsR0FBQWlCLElBQUEsQ0FBSixJQUFJO01BQ0pYLHFCQUFBLEtBQUksRUFBQU4sUUFBQSxFQUFZLEtBQUssQ0FBQztJQUN4QjtFQUNGO0VBQ0FjLGdCQUFnQkEsQ0FBQ0ksS0FBSyxFQUFFO0lBQ3RCWixxQkFBQSxLQUFJLEVBQUFMLE1BQUEsRUFBVWlCLEtBQUs7SUFDbkJMLHFCQUFBLEtBQUksRUFBQWIsUUFBQSxHQUFBaUIsSUFBQSxDQUFKLElBQUk7SUFDSlgscUJBQUEsS0FBSSxFQUFBTixRQUFBLEVBQVlrQixLQUFLLENBQUVDLE9BQU8sSUFBSztNQUNqQyxJQUFJLE9BQU9BLE9BQU8sS0FBSyxTQUFTLEVBQUU7UUFDaEMsSUFBSSxDQUFDQyxVQUFVLENBQUNELE9BQU8sQ0FBQztNQUMxQixDQUFDLE1BQU07UUFDTCxJQUFJLENBQUNaLE9BQU8sQ0FBQyxDQUFDO01BQ2hCO0lBQ0YsQ0FBQyxDQUFDO0VBQ0o7RUFDQWEsVUFBVUEsQ0FBQ0QsT0FBTyxFQUFFO0lBQ2xCLE1BQU1FLE9BQU8sR0FBR1IscUJBQUEsS0FBSSxFQUFBZixRQUFBLE1BQWNxQixPQUFPO0lBQ3pDLElBQUlFLE9BQU8sRUFBRTtNQUNYZixxQkFBQSxLQUFJLEVBQUFSLFFBQUEsRUFBWXFCLE9BQU87TUFDdkIsSUFBSSxDQUFDWixPQUFPLENBQUMsQ0FBQztJQUNoQjtFQUNGO0VBQ0FBLE9BQU9BLENBQUEsRUFBRztJQUNSLE1BQU1lLFNBQVMsR0FBRyxJQUFJLENBQUNBLFNBQVMsQ0FBQyxDQUFDO0lBQ2xDLElBQUksQ0FBQ0MsU0FBUyxDQUFDQyxPQUFPLENBQUVkLFFBQVEsSUFBSztNQUNuQ0EsUUFBUSxDQUFDWSxTQUFTLENBQUM7SUFDckIsQ0FBQyxDQUFDO0VBQ0o7RUFDQUEsU0FBU0EsQ0FBQSxFQUFHO0lBQ1YsSUFBSSxPQUFBVCxxQkFBQSxDQUFPLElBQUksRUFBQWYsUUFBQSxDQUFTLEtBQUssU0FBUyxFQUFFO01BQ3RDLE9BQUFlLHFCQUFBLENBQU8sSUFBSSxFQUFBZixRQUFBO0lBQ2I7SUFDQSxPQUFPMkIsVUFBVSxDQUFDQyxRQUFRLEVBQUVDLGVBQWUsS0FBSyxRQUFRO0VBQzFEO0FBQ0YsQ0FBQztBQUNELElBQUlDLFlBQVksR0FBRyxJQUFJL0IsWUFBWSxDQUFDLENBQUMiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9zYWNoYWNrcy1ob21lcGFnZS8uL25vZGVfbW9kdWxlcy9AdGFuc3RhY2svcXVlcnktY29yZS9idWlsZC9tb2Rlcm4vZm9jdXNNYW5hZ2VyLmpzP2FiZjMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL2ZvY3VzTWFuYWdlci50c1xuaW1wb3J0IHsgU3Vic2NyaWJhYmxlIH0gZnJvbSBcIi4vc3Vic2NyaWJhYmxlLmpzXCI7XG5pbXBvcnQgeyBpc1NlcnZlciB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG52YXIgRm9jdXNNYW5hZ2VyID0gY2xhc3MgZXh0ZW5kcyBTdWJzY3JpYmFibGUge1xuICAjZm9jdXNlZDtcbiAgI2NsZWFudXA7XG4gICNzZXR1cDtcbiAgY29uc3RydWN0b3IoKSB7XG4gICAgc3VwZXIoKTtcbiAgICB0aGlzLiNzZXR1cCA9IChvbkZvY3VzKSA9PiB7XG4gICAgICBpZiAoIWlzU2VydmVyICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IGxpc3RlbmVyID0gKCkgPT4gb25Gb2N1cygpO1xuICAgICAgICB3aW5kb3cuYWRkRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgbGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgcmV0dXJuICgpID0+IHtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcInZpc2liaWxpdHljaGFuZ2VcIiwgbGlzdGVuZXIpO1xuICAgICAgICB9O1xuICAgICAgfVxuICAgICAgcmV0dXJuO1xuICAgIH07XG4gIH1cbiAgb25TdWJzY3JpYmUoKSB7XG4gICAgaWYgKCF0aGlzLiNjbGVhbnVwKSB7XG4gICAgICB0aGlzLnNldEV2ZW50TGlzdGVuZXIodGhpcy4jc2V0dXApO1xuICAgIH1cbiAgfVxuICBvblVuc3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy5oYXNMaXN0ZW5lcnMoKSkge1xuICAgICAgdGhpcy4jY2xlYW51cD8uKCk7XG4gICAgICB0aGlzLiNjbGVhbnVwID0gdm9pZCAwO1xuICAgIH1cbiAgfVxuICBzZXRFdmVudExpc3RlbmVyKHNldHVwKSB7XG4gICAgdGhpcy4jc2V0dXAgPSBzZXR1cDtcbiAgICB0aGlzLiNjbGVhbnVwPy4oKTtcbiAgICB0aGlzLiNjbGVhbnVwID0gc2V0dXAoKGZvY3VzZWQpID0+IHtcbiAgICAgIGlmICh0eXBlb2YgZm9jdXNlZCA9PT0gXCJib29sZWFuXCIpIHtcbiAgICAgICAgdGhpcy5zZXRGb2N1c2VkKGZvY3VzZWQpO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgdGhpcy5vbkZvY3VzKCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cbiAgc2V0Rm9jdXNlZChmb2N1c2VkKSB7XG4gICAgY29uc3QgY2hhbmdlZCA9IHRoaXMuI2ZvY3VzZWQgIT09IGZvY3VzZWQ7XG4gICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgIHRoaXMuI2ZvY3VzZWQgPSBmb2N1c2VkO1xuICAgICAgdGhpcy5vbkZvY3VzKCk7XG4gICAgfVxuICB9XG4gIG9uRm9jdXMoKSB7XG4gICAgY29uc3QgaXNGb2N1c2VkID0gdGhpcy5pc0ZvY3VzZWQoKTtcbiAgICB0aGlzLmxpc3RlbmVycy5mb3JFYWNoKChsaXN0ZW5lcikgPT4ge1xuICAgICAgbGlzdGVuZXIoaXNGb2N1c2VkKTtcbiAgICB9KTtcbiAgfVxuICBpc0ZvY3VzZWQoKSB7XG4gICAgaWYgKHR5cGVvZiB0aGlzLiNmb2N1c2VkID09PSBcImJvb2xlYW5cIikge1xuICAgICAgcmV0dXJuIHRoaXMuI2ZvY3VzZWQ7XG4gICAgfVxuICAgIHJldHVybiBnbG9iYWxUaGlzLmRvY3VtZW50Py52aXNpYmlsaXR5U3RhdGUgIT09IFwiaGlkZGVuXCI7XG4gIH1cbn07XG52YXIgZm9jdXNNYW5hZ2VyID0gbmV3IEZvY3VzTWFuYWdlcigpO1xuZXhwb3J0IHtcbiAgRm9jdXNNYW5hZ2VyLFxuICBmb2N1c01hbmFnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1mb2N1c01hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbIlN1YnNjcmliYWJsZSIsImlzU2VydmVyIiwiRm9jdXNNYW5hZ2VyIiwiX2ZvY3VzZWQiLCJXZWFrTWFwIiwiX2NsZWFudXAiLCJfc2V0dXAiLCJjb25zdHJ1Y3RvciIsIl9jbGFzc1ByaXZhdGVGaWVsZEluaXRTcGVjIiwid3JpdGFibGUiLCJ2YWx1ZSIsIl9jbGFzc1ByaXZhdGVGaWVsZFNldCIsIm9uRm9jdXMiLCJ3aW5kb3ciLCJhZGRFdmVudExpc3RlbmVyIiwibGlzdGVuZXIiLCJyZW1vdmVFdmVudExpc3RlbmVyIiwib25TdWJzY3JpYmUiLCJfY2xhc3NQcml2YXRlRmllbGRHZXQiLCJzZXRFdmVudExpc3RlbmVyIiwib25VbnN1YnNjcmliZSIsImhhc0xpc3RlbmVycyIsImNhbGwiLCJzZXR1cCIsImZvY3VzZWQiLCJzZXRGb2N1c2VkIiwiY2hhbmdlZCIsImlzRm9jdXNlZCIsImxpc3RlbmVycyIsImZvckVhY2giLCJnbG9iYWxUaGlzIiwiZG9jdW1lbnQiLCJ2aXNpYmlsaXR5U3RhdGUiLCJmb2N1c01hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js":
/*!*********************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js ***!
  \*********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   hasNextPage: () => (/* binding */ hasNextPage),\n/* harmony export */   hasPreviousPage: () => (/* binding */ hasPreviousPage),\n/* harmony export */   infiniteQueryBehavior: () => (/* binding */ infiniteQueryBehavior)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/infiniteQueryBehavior.ts\n\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = {\n        pages: [],\n        pageParams: []\n      };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = object => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.ensureQueryFn)(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const {\n            maxPages\n          } = context.options;\n          const addTo = previous ? _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToStart : _utils_js__WEBPACK_IMPORTED_MODULE_0__.addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(fetchFn, {\n            client: context.client,\n            queryKey: context.queryKey,\n            meta: context.options.meta,\n            signal: context.signal\n          }, query);\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, {\n  pages,\n  pageParams\n}) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(pages[lastIndex], pages, pageParams[lastIndex], pageParams) : void 0;\n}\nfunction getPreviousPageParam(options, {\n  pages,\n  pageParams\n}) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/mutation.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Mutation: () => (/* binding */ Mutation),\n/* harmony export */   getDefaultState: () => (/* binding */ getDefaultState)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./retryer.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js\");\nvar _client, _observers, _mutationCache, _retryer, _dispatch;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n// src/mutation.ts\n\n\n\nvar Mutation = (_client = /*#__PURE__*/new WeakMap(), _observers = /*#__PURE__*/new WeakMap(), _mutationCache = /*#__PURE__*/new WeakMap(), _retryer = /*#__PURE__*/new WeakMap(), _dispatch = /*#__PURE__*/new WeakSet(), class Mutation extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  constructor(config) {\n    super();\n    _classPrivateMethodInitSpec(this, _dispatch);\n    _classPrivateFieldInitSpec(this, _client, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _observers, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _mutationCache, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _retryer, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _client, config.client);\n    this.mutationId = config.mutationId;\n    _classPrivateFieldSet(this, _mutationCache, config.mutationCache);\n    _classPrivateFieldSet(this, _observers, []);\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!_classPrivateFieldGet(this, _observers).includes(observer)) {\n      _classPrivateFieldGet(this, _observers).push(observer);\n      this.clearGcTimeout();\n      _classPrivateFieldGet(this, _mutationCache).notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    _classPrivateFieldSet(this, _observers, _classPrivateFieldGet(this, _observers).filter(x => x !== observer));\n    this.scheduleGc();\n    _classPrivateFieldGet(this, _mutationCache).notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!_classPrivateFieldGet(this, _observers).length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        _classPrivateFieldGet(this, _mutationCache).remove(this);\n      }\n    }\n  }\n  continue() {\n    return _classPrivateFieldGet(this, _retryer)?.continue() ??\n    // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n        type: \"continue\"\n      });\n    };\n    const mutationFnContext = {\n      client: _classPrivateFieldGet(this, _client),\n      meta: this.options.meta,\n      mutationKey: this.options.mutationKey\n    };\n    _classPrivateFieldSet(this, _retryer, (0,_retryer_js__WEBPACK_IMPORTED_MODULE_1__.createRetryer)({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables, mutationFnContext);\n      },\n      onFail: (failureCount, error) => {\n        _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n          type: \"failed\",\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n          type: \"pause\"\n        });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => _classPrivateFieldGet(this, _mutationCache).canRun(this)\n    }));\n    const restored = this.state.status === \"pending\";\n    const isPaused = !_classPrivateFieldGet(this, _retryer).canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n          type: \"pending\",\n          variables,\n          isPaused\n        });\n        await _classPrivateFieldGet(this, _mutationCache).config.onMutate?.(variables, this, mutationFnContext);\n        const context = await this.options.onMutate?.(variables, mutationFnContext);\n        if (context !== this.state.context) {\n          _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await _classPrivateFieldGet(this, _retryer).start();\n      await _classPrivateFieldGet(this, _mutationCache).config.onSuccess?.(data, variables, this.state.context, this, mutationFnContext);\n      await this.options.onSuccess?.(data, variables, this.state.context, mutationFnContext);\n      await _classPrivateFieldGet(this, _mutationCache).config.onSettled?.(data, null, this.state.variables, this.state.context, this, mutationFnContext);\n      await this.options.onSettled?.(data, null, variables, this.state.context, mutationFnContext);\n      _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n        type: \"success\",\n        data\n      });\n      return data;\n    } catch (error) {\n      try {\n        await _classPrivateFieldGet(this, _mutationCache).config.onError?.(error, variables, this.state.context, this, mutationFnContext);\n        await this.options.onError?.(error, variables, this.state.context, mutationFnContext);\n        await _classPrivateFieldGet(this, _mutationCache).config.onSettled?.(void 0, error, this.state.variables, this.state.context, this, mutationFnContext);\n        await this.options.onSettled?.(void 0, error, variables, this.state.context, mutationFnContext);\n        throw error;\n      } finally {\n        _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n          type: \"error\",\n          error\n        });\n      }\n    } finally {\n      _classPrivateFieldGet(this, _mutationCache).runNext(this);\n    }\n  }\n});\nfunction _dispatch2(action) {\n  const reducer = state => {\n    switch (action.type) {\n      case \"failed\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          failureCount: action.failureCount,\n          failureReason: action.error\n        });\n      case \"pause\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isPaused: true\n        });\n      case \"continue\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isPaused: false\n        });\n      case \"pending\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          context: action.context,\n          data: void 0,\n          failureCount: 0,\n          failureReason: null,\n          error: null,\n          isPaused: action.isPaused,\n          status: \"pending\",\n          variables: action.variables,\n          submittedAt: Date.now()\n        });\n      case \"success\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          data: action.data,\n          failureCount: 0,\n          failureReason: null,\n          error: null,\n          status: \"success\",\n          isPaused: false\n        });\n      case \"error\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          data: void 0,\n          error: action.error,\n          failureCount: state.failureCount + 1,\n          failureReason: action.error,\n          isPaused: false,\n          status: \"error\"\n        });\n    }\n  };\n  this.state = reducer(this.state);\n  _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n    _classPrivateFieldGet(this, _observers).forEach(observer => {\n      observer.onMutationUpdate(action);\n    });\n    _classPrivateFieldGet(this, _mutationCache).notify({\n      mutation: this,\n      type: \"updated\",\n      action\n    });\n  });\n}\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/mutationCache.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   MutationCache: () => (/* binding */ MutationCache)\n/* harmony export */ });\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _mutation_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutation.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/mutation.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\nvar _mutations, _scopes, _mutationId;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n// src/mutationCache.ts\n\n\n\n\nvar MutationCache = (_mutations = /*#__PURE__*/new WeakMap(), _scopes = /*#__PURE__*/new WeakMap(), _mutationId = /*#__PURE__*/new WeakMap(), class MutationCache extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config = {}) {\n    super();\n    _classPrivateFieldInitSpec(this, _mutations, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _scopes, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _mutationId, {\n      writable: true,\n      value: void 0\n    });\n    this.config = config;\n    _classPrivateFieldSet(this, _mutations, /* @__PURE__ */new Set());\n    _classPrivateFieldSet(this, _scopes, /* @__PURE__ */new Map());\n    _classPrivateFieldSet(this, _mutationId, 0);\n  }\n  build(client, options, state) {\n    var _this$mutationId;\n    const mutation = new _mutation_js__WEBPACK_IMPORTED_MODULE_1__.Mutation({\n      client,\n      mutationCache: this,\n      mutationId: _classPrivateFieldSet(this, _mutationId, (_this$mutationId = _classPrivateFieldGet(this, _mutationId), ++_this$mutationId)),\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    _classPrivateFieldGet(this, _mutations).add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = _classPrivateFieldGet(this, _scopes).get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        _classPrivateFieldGet(this, _scopes).set(scope, [mutation]);\n      }\n    }\n    this.notify({\n      type: \"added\",\n      mutation\n    });\n  }\n  remove(mutation) {\n    if (_classPrivateFieldGet(this, _mutations).delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = _classPrivateFieldGet(this, _scopes).get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            _classPrivateFieldGet(this, _scopes).delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({\n      type: \"removed\",\n      mutation\n    });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = _classPrivateFieldGet(this, _scopes).get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(m => m.state.status === \"pending\");\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = _classPrivateFieldGet(this, _scopes).get(scope)?.find(m => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      _classPrivateFieldGet(this, _mutations).forEach(mutation => {\n        this.notify({\n          type: \"removed\",\n          mutation\n        });\n      });\n      _classPrivateFieldGet(this, _mutations).clear();\n      _classPrivateFieldGet(this, _scopes).clear();\n    });\n  }\n  getAll() {\n    return Array.from(_classPrivateFieldGet(this, _mutations));\n  }\n  find(filters) {\n    const defaultedFilters = _objectSpread({\n      exact: true\n    }, filters);\n    return this.getAll().find(mutation => (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(defaultedFilters, mutation));\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter(mutation => (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.matchMutation)(filters, mutation));\n  }\n  notify(event) {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter(x => x.state.isPaused);\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_2__.notifyManager.batch(() => Promise.all(pausedMutations.map(mutation => mutation.continue().catch(_utils_js__WEBPACK_IMPORTED_MODULE_3__.noop))));\n  }\n});\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/notifyManager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   createNotifyManager: () => (/* binding */ createNotifyManager),\n/* harmony export */   defaultScheduler: () => (/* binding */ defaultScheduler),\n/* harmony export */   notifyManager: () => (/* binding */ notifyManager)\n/* harmony export */ });\n/* harmony import */ var _timeoutManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeoutManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/timeoutManager.js\");\n// src/notifyManager.ts\n\nvar defaultScheduler = _timeoutManager_js__WEBPACK_IMPORTED_MODULE_0__.systemSetTimeoutZero;\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = callback => {\n    callback();\n  };\n  let batchNotifyFn = callback => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = callback => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach(callback => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: callback => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: callback => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: fn => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: fn => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: fn => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL25vdGlmeU1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7OztBQUFBO0FBQzJEO0FBQzNELElBQUlDLGdCQUFnQixHQUFHRCxvRUFBb0I7QUFDM0MsU0FBU0UsbUJBQW1CQSxDQUFBLEVBQUc7RUFDN0IsSUFBSUMsS0FBSyxHQUFHLEVBQUU7RUFDZCxJQUFJQyxZQUFZLEdBQUcsQ0FBQztFQUNwQixJQUFJQyxRQUFRLEdBQUlDLFFBQVEsSUFBSztJQUMzQkEsUUFBUSxDQUFDLENBQUM7RUFDWixDQUFDO0VBQ0QsSUFBSUMsYUFBYSxHQUFJRCxRQUFRLElBQUs7SUFDaENBLFFBQVEsQ0FBQyxDQUFDO0VBQ1osQ0FBQztFQUNELElBQUlFLFVBQVUsR0FBR1AsZ0JBQWdCO0VBQ2pDLE1BQU1RLFFBQVEsR0FBSUgsUUFBUSxJQUFLO0lBQzdCLElBQUlGLFlBQVksRUFBRTtNQUNoQkQsS0FBSyxDQUFDTyxJQUFJLENBQUNKLFFBQVEsQ0FBQztJQUN0QixDQUFDLE1BQU07TUFDTEUsVUFBVSxDQUFDLE1BQU07UUFDZkgsUUFBUSxDQUFDQyxRQUFRLENBQUM7TUFDcEIsQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDO0VBQ0QsTUFBTUssS0FBSyxHQUFHQSxDQUFBLEtBQU07SUFDbEIsTUFBTUMsYUFBYSxHQUFHVCxLQUFLO0lBQzNCQSxLQUFLLEdBQUcsRUFBRTtJQUNWLElBQUlTLGFBQWEsQ0FBQ0MsTUFBTSxFQUFFO01BQ3hCTCxVQUFVLENBQUMsTUFBTTtRQUNmRCxhQUFhLENBQUMsTUFBTTtVQUNsQkssYUFBYSxDQUFDRSxPQUFPLENBQUVSLFFBQVEsSUFBSztZQUNsQ0QsUUFBUSxDQUFDQyxRQUFRLENBQUM7VUFDcEIsQ0FBQyxDQUFDO1FBQ0osQ0FBQyxDQUFDO01BQ0osQ0FBQyxDQUFDO0lBQ0o7RUFDRixDQUFDO0VBQ0QsT0FBTztJQUNMUyxLQUFLLEVBQUdULFFBQVEsSUFBSztNQUNuQixJQUFJVSxNQUFNO01BQ1ZaLFlBQVksRUFBRTtNQUNkLElBQUk7UUFDRlksTUFBTSxHQUFHVixRQUFRLENBQUMsQ0FBQztNQUNyQixDQUFDLFNBQVM7UUFDUkYsWUFBWSxFQUFFO1FBQ2QsSUFBSSxDQUFDQSxZQUFZLEVBQUU7VUFDakJPLEtBQUssQ0FBQyxDQUFDO1FBQ1Q7TUFDRjtNQUNBLE9BQU9LLE1BQU07SUFDZixDQUFDO0lBQ0Q7QUFDSjtBQUNBO0lBQ0lDLFVBQVUsRUFBR1gsUUFBUSxJQUFLO01BQ3hCLE9BQU8sQ0FBQyxHQUFHWSxJQUFJLEtBQUs7UUFDbEJULFFBQVEsQ0FBQyxNQUFNO1VBQ2JILFFBQVEsQ0FBQyxHQUFHWSxJQUFJLENBQUM7UUFDbkIsQ0FBQyxDQUFDO01BQ0osQ0FBQztJQUNILENBQUM7SUFDRFQsUUFBUTtJQUNSO0FBQ0o7QUFDQTtBQUNBO0lBQ0lVLGlCQUFpQixFQUFHQyxFQUFFLElBQUs7TUFDekJmLFFBQVEsR0FBR2UsRUFBRTtJQUNmLENBQUM7SUFDRDtBQUNKO0FBQ0E7QUFDQTtJQUNJQyxzQkFBc0IsRUFBR0QsRUFBRSxJQUFLO01BQzlCYixhQUFhLEdBQUdhLEVBQUU7SUFDcEIsQ0FBQztJQUNERSxZQUFZLEVBQUdGLEVBQUUsSUFBSztNQUNwQlosVUFBVSxHQUFHWSxFQUFFO0lBQ2pCO0VBQ0YsQ0FBQztBQUNIO0FBQ0EsSUFBSUcsYUFBYSxHQUFHckIsbUJBQW1CLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NhY2hhY2tzLWhvbWVwYWdlLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9ub3RpZnlNYW5hZ2VyLmpzP2Y2NWQiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL25vdGlmeU1hbmFnZXIudHNcbmltcG9ydCB7IHN5c3RlbVNldFRpbWVvdXRaZXJvIH0gZnJvbSBcIi4vdGltZW91dE1hbmFnZXIuanNcIjtcbnZhciBkZWZhdWx0U2NoZWR1bGVyID0gc3lzdGVtU2V0VGltZW91dFplcm87XG5mdW5jdGlvbiBjcmVhdGVOb3RpZnlNYW5hZ2VyKCkge1xuICBsZXQgcXVldWUgPSBbXTtcbiAgbGV0IHRyYW5zYWN0aW9ucyA9IDA7XG4gIGxldCBub3RpZnlGbiA9IChjYWxsYmFjaykgPT4ge1xuICAgIGNhbGxiYWNrKCk7XG4gIH07XG4gIGxldCBiYXRjaE5vdGlmeUZuID0gKGNhbGxiYWNrKSA9PiB7XG4gICAgY2FsbGJhY2soKTtcbiAgfTtcbiAgbGV0IHNjaGVkdWxlRm4gPSBkZWZhdWx0U2NoZWR1bGVyO1xuICBjb25zdCBzY2hlZHVsZSA9IChjYWxsYmFjaykgPT4ge1xuICAgIGlmICh0cmFuc2FjdGlvbnMpIHtcbiAgICAgIHF1ZXVlLnB1c2goY2FsbGJhY2spO1xuICAgIH0gZWxzZSB7XG4gICAgICBzY2hlZHVsZUZuKCgpID0+IHtcbiAgICAgICAgbm90aWZ5Rm4oY2FsbGJhY2spO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuICBjb25zdCBmbHVzaCA9ICgpID0+IHtcbiAgICBjb25zdCBvcmlnaW5hbFF1ZXVlID0gcXVldWU7XG4gICAgcXVldWUgPSBbXTtcbiAgICBpZiAob3JpZ2luYWxRdWV1ZS5sZW5ndGgpIHtcbiAgICAgIHNjaGVkdWxlRm4oKCkgPT4ge1xuICAgICAgICBiYXRjaE5vdGlmeUZuKCgpID0+IHtcbiAgICAgICAgICBvcmlnaW5hbFF1ZXVlLmZvckVhY2goKGNhbGxiYWNrKSA9PiB7XG4gICAgICAgICAgICBub3RpZnlGbihjYWxsYmFjayk7XG4gICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgfSk7XG4gICAgfVxuICB9O1xuICByZXR1cm4ge1xuICAgIGJhdGNoOiAoY2FsbGJhY2spID0+IHtcbiAgICAgIGxldCByZXN1bHQ7XG4gICAgICB0cmFuc2FjdGlvbnMrKztcbiAgICAgIHRyeSB7XG4gICAgICAgIHJlc3VsdCA9IGNhbGxiYWNrKCk7XG4gICAgICB9IGZpbmFsbHkge1xuICAgICAgICB0cmFuc2FjdGlvbnMtLTtcbiAgICAgICAgaWYgKCF0cmFuc2FjdGlvbnMpIHtcbiAgICAgICAgICBmbHVzaCgpO1xuICAgICAgICB9XG4gICAgICB9XG4gICAgICByZXR1cm4gcmVzdWx0O1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogQWxsIGNhbGxzIHRvIHRoZSB3cmFwcGVkIGZ1bmN0aW9uIHdpbGwgYmUgYmF0Y2hlZC5cbiAgICAgKi9cbiAgICBiYXRjaENhbGxzOiAoY2FsbGJhY2spID0+IHtcbiAgICAgIHJldHVybiAoLi4uYXJncykgPT4ge1xuICAgICAgICBzY2hlZHVsZSgoKSA9PiB7XG4gICAgICAgICAgY2FsbGJhY2soLi4uYXJncyk7XG4gICAgICAgIH0pO1xuICAgICAgfTtcbiAgICB9LFxuICAgIHNjaGVkdWxlLFxuICAgIC8qKlxuICAgICAqIFVzZSB0aGlzIG1ldGhvZCB0byBzZXQgYSBjdXN0b20gbm90aWZ5IGZ1bmN0aW9uLlxuICAgICAqIFRoaXMgY2FuIGJlIHVzZWQgdG8gZm9yIGV4YW1wbGUgd3JhcCBub3RpZmljYXRpb25zIHdpdGggYFJlYWN0LmFjdGAgd2hpbGUgcnVubmluZyB0ZXN0cy5cbiAgICAgKi9cbiAgICBzZXROb3RpZnlGdW5jdGlvbjogKGZuKSA9PiB7XG4gICAgICBub3RpZnlGbiA9IGZuO1xuICAgIH0sXG4gICAgLyoqXG4gICAgICogVXNlIHRoaXMgbWV0aG9kIHRvIHNldCBhIGN1c3RvbSBmdW5jdGlvbiB0byBiYXRjaCBub3RpZmljYXRpb25zIHRvZ2V0aGVyIGludG8gYSBzaW5nbGUgdGljay5cbiAgICAgKiBCeSBkZWZhdWx0IFJlYWN0IFF1ZXJ5IHdpbGwgdXNlIHRoZSBiYXRjaCBmdW5jdGlvbiBwcm92aWRlZCBieSBSZWFjdERPTSBvciBSZWFjdCBOYXRpdmUuXG4gICAgICovXG4gICAgc2V0QmF0Y2hOb3RpZnlGdW5jdGlvbjogKGZuKSA9PiB7XG4gICAgICBiYXRjaE5vdGlmeUZuID0gZm47XG4gICAgfSxcbiAgICBzZXRTY2hlZHVsZXI6IChmbikgPT4ge1xuICAgICAgc2NoZWR1bGVGbiA9IGZuO1xuICAgIH1cbiAgfTtcbn1cbnZhciBub3RpZnlNYW5hZ2VyID0gY3JlYXRlTm90aWZ5TWFuYWdlcigpO1xuZXhwb3J0IHtcbiAgY3JlYXRlTm90aWZ5TWFuYWdlcixcbiAgZGVmYXVsdFNjaGVkdWxlcixcbiAgbm90aWZ5TWFuYWdlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPW5vdGlmeU1hbmFnZXIuanMubWFwIl0sIm5hbWVzIjpbInN5c3RlbVNldFRpbWVvdXRaZXJvIiwiZGVmYXVsdFNjaGVkdWxlciIsImNyZWF0ZU5vdGlmeU1hbmFnZXIiLCJxdWV1ZSIsInRyYW5zYWN0aW9ucyIsIm5vdGlmeUZuIiwiY2FsbGJhY2siLCJiYXRjaE5vdGlmeUZuIiwic2NoZWR1bGVGbiIsInNjaGVkdWxlIiwicHVzaCIsImZsdXNoIiwib3JpZ2luYWxRdWV1ZSIsImxlbmd0aCIsImZvckVhY2giLCJiYXRjaCIsInJlc3VsdCIsImJhdGNoQ2FsbHMiLCJhcmdzIiwic2V0Tm90aWZ5RnVuY3Rpb24iLCJmbiIsInNldEJhdGNoTm90aWZ5RnVuY3Rpb24iLCJzZXRTY2hlZHVsZXIiLCJub3RpZnlNYW5hZ2VyIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js":
/*!*************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/onlineManager.js ***!
  \*************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   OnlineManager: () => (/* binding */ OnlineManager),\n/* harmony export */   onlineManager: () => (/* binding */ onlineManager)\n/* harmony export */ });\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\nvar _online, _cleanup, _setup;\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n// src/onlineManager.ts\n\n\nvar OnlineManager = (_online = /*#__PURE__*/new WeakMap(), _cleanup = /*#__PURE__*/new WeakMap(), _setup = /*#__PURE__*/new WeakMap(), class OnlineManager extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor() {\n    super();\n    _classPrivateFieldInitSpec(this, _online, {\n      writable: true,\n      value: true\n    });\n    _classPrivateFieldInitSpec(this, _cleanup, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _setup, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _setup, onOnline => {\n      if (!_utils_js__WEBPACK_IMPORTED_MODULE_1__.isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    });\n  }\n  onSubscribe() {\n    if (!_classPrivateFieldGet(this, _cleanup)) {\n      this.setEventListener(_classPrivateFieldGet(this, _setup));\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      _classPrivateFieldGet(this, _cleanup)?.call(this);\n      _classPrivateFieldSet(this, _cleanup, void 0);\n    }\n  }\n  setEventListener(setup) {\n    _classPrivateFieldSet(this, _setup, setup);\n    _classPrivateFieldGet(this, _cleanup)?.call(this);\n    _classPrivateFieldSet(this, _cleanup, setup(this.setOnline.bind(this)));\n  }\n  setOnline(online) {\n    const changed = _classPrivateFieldGet(this, _online) !== online;\n    if (changed) {\n      _classPrivateFieldSet(this, _online, online);\n      this.listeners.forEach(listener => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return _classPrivateFieldGet(this, _online);\n  }\n});\nvar onlineManager = new OnlineManager();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL29ubGluZU1hbmFnZXIuanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7O0FBQUE7QUFDaUQ7QUFDWDtBQUN0QyxJQUFJRSxhQUFhLElBQUFDLE9BQUEsb0JBQUFDLE9BQUEsSUFBQUMsUUFBQSxvQkFBQUQsT0FBQSxJQUFBRSxNQUFBLG9CQUFBRixPQUFBLElBQUcsTUFBaEJGLGFBQWEsU0FBaUJGLDBEQUFZLENBQUM7RUFJN0NPLFdBQVdBLENBQUEsRUFBRztJQUNaLEtBQUssQ0FBQyxDQUFDO0lBQUNDLDBCQUFBLE9BQUFMLE9BQUE7TUFBQU0sUUFBQTtNQUFBQyxLQUFBLEVBSkE7SUFBSTtJQUFBRiwwQkFBQSxPQUFBSCxRQUFBO01BQUFJLFFBQUE7TUFBQUMsS0FBQTtJQUFBO0lBQUFGLDBCQUFBLE9BQUFGLE1BQUE7TUFBQUcsUUFBQTtNQUFBQyxLQUFBO0lBQUE7SUFLWkMscUJBQUEsS0FBSSxFQUFBTCxNQUFBLEVBQVdNLFFBQVEsSUFBSztNQUMxQixJQUFJLENBQUNYLCtDQUFRLElBQUlZLE1BQU0sQ0FBQ0MsZ0JBQWdCLEVBQUU7UUFDeEMsTUFBTUMsY0FBYyxHQUFHQSxDQUFBLEtBQU1ILFFBQVEsQ0FBQyxJQUFJLENBQUM7UUFDM0MsTUFBTUksZUFBZSxHQUFHQSxDQUFBLEtBQU1KLFFBQVEsQ0FBQyxLQUFLLENBQUM7UUFDN0NDLE1BQU0sQ0FBQ0MsZ0JBQWdCLENBQUMsUUFBUSxFQUFFQyxjQUFjLEVBQUUsS0FBSyxDQUFDO1FBQ3hERixNQUFNLENBQUNDLGdCQUFnQixDQUFDLFNBQVMsRUFBRUUsZUFBZSxFQUFFLEtBQUssQ0FBQztRQUMxRCxPQUFPLE1BQU07VUFDWEgsTUFBTSxDQUFDSSxtQkFBbUIsQ0FBQyxRQUFRLEVBQUVGLGNBQWMsQ0FBQztVQUNwREYsTUFBTSxDQUFDSSxtQkFBbUIsQ0FBQyxTQUFTLEVBQUVELGVBQWUsQ0FBQztRQUN4RCxDQUFDO01BQ0g7TUFDQTtJQUNGLENBQUM7RUFDSDtFQUNBRSxXQUFXQSxDQUFBLEVBQUc7SUFDWixJQUFJLENBQUFDLHFCQUFBLENBQUMsSUFBSSxFQUFBZCxRQUFBLENBQVMsRUFBRTtNQUNsQixJQUFJLENBQUNlLGdCQUFnQixDQUFBRCxxQkFBQSxDQUFDLElBQUksRUFBQWIsTUFBQSxDQUFPLENBQUM7SUFDcEM7RUFDRjtFQUNBZSxhQUFhQSxDQUFBLEVBQUc7SUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDQyxZQUFZLENBQUMsQ0FBQyxFQUFFO01BQ3hCSCxxQkFBQSxLQUFJLEVBQUFkLFFBQUEsR0FBQWtCLElBQUEsQ0FBSixJQUFJO01BQ0paLHFCQUFBLEtBQUksRUFBQU4sUUFBQSxFQUFZLEtBQUssQ0FBQztJQUN4QjtFQUNGO0VBQ0FlLGdCQUFnQkEsQ0FBQ0ksS0FBSyxFQUFFO0lBQ3RCYixxQkFBQSxLQUFJLEVBQUFMLE1BQUEsRUFBVWtCLEtBQUs7SUFDbkJMLHFCQUFBLEtBQUksRUFBQWQsUUFBQSxHQUFBa0IsSUFBQSxDQUFKLElBQUk7SUFDSloscUJBQUEsS0FBSSxFQUFBTixRQUFBLEVBQVltQixLQUFLLENBQUMsSUFBSSxDQUFDQyxTQUFTLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUMsQ0FBQztFQUNsRDtFQUNBRCxTQUFTQSxDQUFDRSxNQUFNLEVBQUU7SUFDaEIsTUFBTUMsT0FBTyxHQUFHVCxxQkFBQSxLQUFJLEVBQUFoQixPQUFBLE1BQWF3QixNQUFNO0lBQ3ZDLElBQUlDLE9BQU8sRUFBRTtNQUNYakIscUJBQUEsS0FBSSxFQUFBUixPQUFBLEVBQVd3QixNQUFNO01BQ3JCLElBQUksQ0FBQ0UsU0FBUyxDQUFDQyxPQUFPLENBQUVDLFFBQVEsSUFBSztRQUNuQ0EsUUFBUSxDQUFDSixNQUFNLENBQUM7TUFDbEIsQ0FBQyxDQUFDO0lBQ0o7RUFDRjtFQUNBSyxRQUFRQSxDQUFBLEVBQUc7SUFDVCxPQUFBYixxQkFBQSxDQUFPLElBQUksRUFBQWhCLE9BQUE7RUFDYjtBQUNGLENBQUM7QUFDRCxJQUFJOEIsYUFBYSxHQUFHLElBQUkvQixhQUFhLENBQUMsQ0FBQyIsInNvdXJjZXMiOlsid2VicGFjazovL3NhY2hhY2tzLWhvbWVwYWdlLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi9vbmxpbmVNYW5hZ2VyLmpzP2UyYTMiXSwic291cmNlc0NvbnRlbnQiOlsiLy8gc3JjL29ubGluZU1hbmFnZXIudHNcbmltcG9ydCB7IFN1YnNjcmliYWJsZSB9IGZyb20gXCIuL3N1YnNjcmliYWJsZS5qc1wiO1xuaW1wb3J0IHsgaXNTZXJ2ZXIgfSBmcm9tIFwiLi91dGlscy5qc1wiO1xudmFyIE9ubGluZU1hbmFnZXIgPSBjbGFzcyBleHRlbmRzIFN1YnNjcmliYWJsZSB7XG4gICNvbmxpbmUgPSB0cnVlO1xuICAjY2xlYW51cDtcbiAgI3NldHVwO1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICBzdXBlcigpO1xuICAgIHRoaXMuI3NldHVwID0gKG9uT25saW5lKSA9PiB7XG4gICAgICBpZiAoIWlzU2VydmVyICYmIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKSB7XG4gICAgICAgIGNvbnN0IG9ubGluZUxpc3RlbmVyID0gKCkgPT4gb25PbmxpbmUodHJ1ZSk7XG4gICAgICAgIGNvbnN0IG9mZmxpbmVMaXN0ZW5lciA9ICgpID0+IG9uT25saW5lKGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvbmxpbmVcIiwgb25saW5lTGlzdGVuZXIsIGZhbHNlKTtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoXCJvZmZsaW5lXCIsIG9mZmxpbmVMaXN0ZW5lciwgZmFsc2UpO1xuICAgICAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKFwib25saW5lXCIsIG9ubGluZUxpc3RlbmVyKTtcbiAgICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcihcIm9mZmxpbmVcIiwgb2ZmbGluZUxpc3RlbmVyKTtcbiAgICAgICAgfTtcbiAgICAgIH1cbiAgICAgIHJldHVybjtcbiAgICB9O1xuICB9XG4gIG9uU3Vic2NyaWJlKCkge1xuICAgIGlmICghdGhpcy4jY2xlYW51cCkge1xuICAgICAgdGhpcy5zZXRFdmVudExpc3RlbmVyKHRoaXMuI3NldHVwKTtcbiAgICB9XG4gIH1cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgICBpZiAoIXRoaXMuaGFzTGlzdGVuZXJzKCkpIHtcbiAgICAgIHRoaXMuI2NsZWFudXA/LigpO1xuICAgICAgdGhpcy4jY2xlYW51cCA9IHZvaWQgMDtcbiAgICB9XG4gIH1cbiAgc2V0RXZlbnRMaXN0ZW5lcihzZXR1cCkge1xuICAgIHRoaXMuI3NldHVwID0gc2V0dXA7XG4gICAgdGhpcy4jY2xlYW51cD8uKCk7XG4gICAgdGhpcy4jY2xlYW51cCA9IHNldHVwKHRoaXMuc2V0T25saW5lLmJpbmQodGhpcykpO1xuICB9XG4gIHNldE9ubGluZShvbmxpbmUpIHtcbiAgICBjb25zdCBjaGFuZ2VkID0gdGhpcy4jb25saW5lICE9PSBvbmxpbmU7XG4gICAgaWYgKGNoYW5nZWQpIHtcbiAgICAgIHRoaXMuI29ubGluZSA9IG9ubGluZTtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmZvckVhY2goKGxpc3RlbmVyKSA9PiB7XG4gICAgICAgIGxpc3RlbmVyKG9ubGluZSk7XG4gICAgICB9KTtcbiAgICB9XG4gIH1cbiAgaXNPbmxpbmUoKSB7XG4gICAgcmV0dXJuIHRoaXMuI29ubGluZTtcbiAgfVxufTtcbnZhciBvbmxpbmVNYW5hZ2VyID0gbmV3IE9ubGluZU1hbmFnZXIoKTtcbmV4cG9ydCB7XG4gIE9ubGluZU1hbmFnZXIsXG4gIG9ubGluZU1hbmFnZXJcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1vbmxpbmVNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJTdWJzY3JpYmFibGUiLCJpc1NlcnZlciIsIk9ubGluZU1hbmFnZXIiLCJfb25saW5lIiwiV2Vha01hcCIsIl9jbGVhbnVwIiwiX3NldHVwIiwiY29uc3RydWN0b3IiLCJfY2xhc3NQcml2YXRlRmllbGRJbml0U3BlYyIsIndyaXRhYmxlIiwidmFsdWUiLCJfY2xhc3NQcml2YXRlRmllbGRTZXQiLCJvbk9ubGluZSIsIndpbmRvdyIsImFkZEV2ZW50TGlzdGVuZXIiLCJvbmxpbmVMaXN0ZW5lciIsIm9mZmxpbmVMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJvblN1YnNjcmliZSIsIl9jbGFzc1ByaXZhdGVGaWVsZEdldCIsInNldEV2ZW50TGlzdGVuZXIiLCJvblVuc3Vic2NyaWJlIiwiaGFzTGlzdGVuZXJzIiwiY2FsbCIsInNldHVwIiwic2V0T25saW5lIiwiYmluZCIsIm9ubGluZSIsImNoYW5nZWQiLCJsaXN0ZW5lcnMiLCJmb3JFYWNoIiwibGlzdGVuZXIiLCJpc09ubGluZSIsIm9ubGluZU1hbmFnZXIiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/query.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Query: () => (/* binding */ Query),\n/* harmony export */   fetchState: () => (/* binding */ fetchState)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _retryer_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./retryer.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js\");\n/* harmony import */ var _removable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./removable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js\");\nvar _initialState, _revertState, _cache, _client, _retryer, _defaultOptions, _abortSignalConsumed, _dispatch;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateMethodInitSpec(obj, privateSet) { _checkPrivateRedeclaration(obj, privateSet); privateSet.add(obj); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateMethodGet(receiver, privateSet, fn) { if (!privateSet.has(receiver)) { throw new TypeError(\"attempted to get private field on non-instance\"); } return fn; }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n// src/query.ts\n\n\n\n\nvar Query = (_initialState = /*#__PURE__*/new WeakMap(), _revertState = /*#__PURE__*/new WeakMap(), _cache = /*#__PURE__*/new WeakMap(), _client = /*#__PURE__*/new WeakMap(), _retryer = /*#__PURE__*/new WeakMap(), _defaultOptions = /*#__PURE__*/new WeakMap(), _abortSignalConsumed = /*#__PURE__*/new WeakMap(), _dispatch = /*#__PURE__*/new WeakSet(), class Query extends _removable_js__WEBPACK_IMPORTED_MODULE_0__.Removable {\n  constructor(config) {\n    super();\n    _classPrivateMethodInitSpec(this, _dispatch);\n    _classPrivateFieldInitSpec(this, _initialState, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _revertState, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _cache, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _client, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _retryer, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _defaultOptions, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _abortSignalConsumed, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _abortSignalConsumed, false);\n    _classPrivateFieldSet(this, _defaultOptions, config.defaultOptions);\n    this.setOptions(config.options);\n    this.observers = [];\n    _classPrivateFieldSet(this, _client, config.client);\n    _classPrivateFieldSet(this, _cache, _classPrivateFieldGet(this, _client).getQueryCache());\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    _classPrivateFieldSet(this, _initialState, getDefaultState(this.options));\n    this.state = config.state ?? _classPrivateFieldGet(this, _initialState);\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return _classPrivateFieldGet(this, _retryer)?.promise;\n  }\n  setOptions(options) {\n    this.options = _objectSpread(_objectSpread({}, _classPrivateFieldGet(this, _defaultOptions)), options);\n    this.updateGcTime(this.options.gcTime);\n    if (this.state && this.state.data === void 0) {\n      const defaultState = getDefaultState(this.options);\n      if (defaultState.data !== void 0) {\n        this.setData(defaultState.data, {\n          updatedAt: defaultState.dataUpdatedAt,\n          manual: true\n        });\n        _classPrivateFieldSet(this, _initialState, defaultState);\n      }\n    }\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      _classPrivateFieldGet(this, _cache).remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.replaceData)(this.state.data, newData, this.options);\n    _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n      type: \"setState\",\n      state,\n      setStateOptions\n    });\n  }\n  cancel(options) {\n    const promise = _classPrivateFieldGet(this, _retryer)?.promise;\n    _classPrivateFieldGet(this, _retryer)?.cancel(options);\n    return promise ? promise.then(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_1__.noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({\n      silent: true\n    });\n  }\n  reset() {\n    this.destroy();\n    this.setState(_classPrivateFieldGet(this, _initialState));\n  }\n  isActive() {\n    return this.observers.some(observer => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.resolveEnabled)(observer.options.enabled, this) !== false);\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_1__.skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(observer => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.resolveStaleTime)(observer.options.staleTime, this) === \"static\");\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(observer => observer.getCurrentResult().isStale);\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !(0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.timeUntilStale)(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find(x => x.shouldFetchOnWindowFocus());\n    observer?.refetch({\n      cancelRefetch: false\n    });\n    _classPrivateFieldGet(this, _retryer)?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find(x => x.shouldFetchOnReconnect());\n    observer?.refetch({\n      cancelRefetch: false\n    });\n    _classPrivateFieldGet(this, _retryer)?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      _classPrivateFieldGet(this, _cache).notify({\n        type: \"observerAdded\",\n        query: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter(x => x !== observer);\n      if (!this.observers.length) {\n        if (_classPrivateFieldGet(this, _retryer)) {\n          if (_classPrivateFieldGet(this, _abortSignalConsumed)) {\n            _classPrivateFieldGet(this, _retryer).cancel({\n              revert: true\n            });\n          } else {\n            _classPrivateFieldGet(this, _retryer).cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      _classPrivateFieldGet(this, _cache).notify({\n        type: \"observerRemoved\",\n        query: this,\n        observer\n      });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n        type: \"invalidate\"\n      });\n    }\n  }\n  async fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\" &&\n    // If the promise in the retyer is already rejected, we have to definitely\n    // re-start the fetch; there is a chance that the query is still in a\n    // pending state when that happens\n    _classPrivateFieldGet(this, _retryer)?.status() !== \"rejected\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({\n          silent: true\n        });\n      } else if (_classPrivateFieldGet(this, _retryer)) {\n        _classPrivateFieldGet(this, _retryer).continueRetry();\n        return _classPrivateFieldGet(this, _retryer).promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find(x => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (true) {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(`As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`);\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = object => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          _classPrivateFieldSet(this, _abortSignalConsumed, true);\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.ensureQueryFn)(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: _classPrivateFieldGet(this, _client),\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      _classPrivateFieldSet(this, _abortSignalConsumed, false);\n      if (this.options.persister) {\n        return this.options.persister(queryFn, queryFnContext, this);\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: _classPrivateFieldGet(this, _client),\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    _classPrivateFieldSet(this, _revertState, this.state);\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n        type: \"fetch\",\n        meta: context.fetchOptions?.meta\n      });\n    }\n    _classPrivateFieldSet(this, _retryer, (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.createRetryer)({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      onCancel: error => {\n        if (error instanceof _retryer_js__WEBPACK_IMPORTED_MODULE_2__.CancelledError && error.revert) {\n          this.setState(_objectSpread(_objectSpread({}, _classPrivateFieldGet(this, _revertState)), {}, {\n            fetchStatus: \"idle\"\n          }));\n        }\n        abortController.abort();\n      },\n      onFail: (failureCount, error) => {\n        _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n          type: \"failed\",\n          failureCount,\n          error\n        });\n      },\n      onPause: () => {\n        _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n          type: \"pause\"\n        });\n      },\n      onContinue: () => {\n        _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n          type: \"continue\"\n        });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    }));\n    try {\n      const data = await _classPrivateFieldGet(this, _retryer).start();\n      if (data === void 0) {\n        if (true) {\n          console.error(`Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`);\n        }\n        throw new Error(`${this.queryHash} data is undefined`);\n      }\n      this.setData(data);\n      _classPrivateFieldGet(this, _cache).config.onSuccess?.(data, this);\n      _classPrivateFieldGet(this, _cache).config.onSettled?.(data, this.state.error, this);\n      return data;\n    } catch (error) {\n      if (error instanceof _retryer_js__WEBPACK_IMPORTED_MODULE_2__.CancelledError) {\n        if (error.silent) {\n          return _classPrivateFieldGet(this, _retryer).promise;\n        } else if (error.revert) {\n          if (this.state.data === void 0) {\n            throw error;\n          }\n          return this.state.data;\n        }\n      }\n      _classPrivateMethodGet(this, _dispatch, _dispatch2).call(this, {\n        type: \"error\",\n        error\n      });\n      _classPrivateFieldGet(this, _cache).config.onError?.(error, this);\n      _classPrivateFieldGet(this, _cache).config.onSettled?.(this.state.data, error, this);\n      throw error;\n    } finally {\n      this.scheduleGc();\n    }\n  }\n});\nfunction _dispatch2(action) {\n  const reducer = state => {\n    switch (action.type) {\n      case \"failed\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          fetchFailureCount: action.failureCount,\n          fetchFailureReason: action.error\n        });\n      case \"pause\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          fetchStatus: \"paused\"\n        });\n      case \"continue\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          fetchStatus: \"fetching\"\n        });\n      case \"fetch\":\n        return _objectSpread(_objectSpread(_objectSpread({}, state), fetchState(state.data, this.options)), {}, {\n          fetchMeta: action.meta ?? null\n        });\n      case \"success\":\n        const newState = _objectSpread(_objectSpread({}, state), {}, {\n          data: action.data,\n          dataUpdateCount: state.dataUpdateCount + 1,\n          dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n          error: null,\n          isInvalidated: false,\n          status: \"success\"\n        }, !action.manual && {\n          fetchStatus: \"idle\",\n          fetchFailureCount: 0,\n          fetchFailureReason: null\n        });\n        _classPrivateFieldSet(this, _revertState, action.manual ? newState : void 0);\n        return newState;\n      case \"error\":\n        const error = action.error;\n        return _objectSpread(_objectSpread({}, state), {}, {\n          error,\n          errorUpdateCount: state.errorUpdateCount + 1,\n          errorUpdatedAt: Date.now(),\n          fetchFailureCount: state.fetchFailureCount + 1,\n          fetchFailureReason: error,\n          fetchStatus: \"idle\",\n          status: \"error\"\n        });\n      case \"invalidate\":\n        return _objectSpread(_objectSpread({}, state), {}, {\n          isInvalidated: true\n        });\n      case \"setState\":\n        return _objectSpread(_objectSpread({}, state), action.state);\n    }\n  };\n  this.state = reducer(this.state);\n  _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n    this.observers.forEach(observer => {\n      observer.onQueryUpdate();\n    });\n    _classPrivateFieldGet(this, _cache).notify({\n      query: this,\n      type: \"updated\",\n      action\n    });\n  });\n}\nfunction fetchState(data, options) {\n  return _objectSpread({\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: (0,_retryer_js__WEBPACK_IMPORTED_MODULE_2__.canFetch)(options.networkMode) ? \"fetching\" : \"paused\"\n  }, data === void 0 && {\n    error: null,\n    status: \"pending\"\n  });\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js":
/*!**********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryCache.js ***!
  \**********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryCache: () => (/* binding */ QueryCache)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _query_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./query.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/query.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _subscribable_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./subscribable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\");\nvar _queries;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n// src/queryCache.ts\n\n\n\n\nvar QueryCache = (_queries = /*#__PURE__*/new WeakMap(), class QueryCache extends _subscribable_js__WEBPACK_IMPORTED_MODULE_0__.Subscribable {\n  constructor(config = {}) {\n    super();\n    _classPrivateFieldInitSpec(this, _queries, {\n      writable: true,\n      value: void 0\n    });\n    this.config = config;\n    _classPrivateFieldSet(this, _queries, /* @__PURE__ */new Map());\n  }\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.hashQueryKeyByOptions)(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new _query_js__WEBPACK_IMPORTED_MODULE_2__.Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!_classPrivateFieldGet(this, _queries).has(query.queryHash)) {\n      _classPrivateFieldGet(this, _queries).set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = _classPrivateFieldGet(this, _queries).get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        _classPrivateFieldGet(this, _queries).delete(query.queryHash);\n      }\n      this.notify({\n        type: \"removed\",\n        query\n      });\n    }\n  }\n  clear() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.getAll().forEach(query => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return _classPrivateFieldGet(this, _queries).get(queryHash);\n  }\n  getAll() {\n    return [..._classPrivateFieldGet(this, _queries).values()];\n  }\n  find(filters) {\n    const defaultedFilters = _objectSpread({\n      exact: true\n    }, filters);\n    return this.getAll().find(query => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(defaultedFilters, query));\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter(query => (0,_utils_js__WEBPACK_IMPORTED_MODULE_1__.matchQuery)(filters, query)) : queries;\n  }\n  notify(event) {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.listeners.forEach(listener => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.getAll().forEach(query => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_3__.notifyManager.batch(() => {\n      this.getAll().forEach(query => {\n        query.onOnline();\n      });\n    });\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/queryClient.js":
/*!***********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/queryClient.js ***!
  \***********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClient: () => (/* binding */ QueryClient)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n/* harmony import */ var _queryCache_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./queryCache.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/queryCache.js\");\n/* harmony import */ var _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mutationCache.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/mutationCache.js\");\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./onlineManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./notifyManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/notifyManager.js\");\n/* harmony import */ var _infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./infiniteQueryBehavior.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js\");\nvar _queryCache, _mutationCache, _defaultOptions, _queryDefaults, _mutationDefaults, _mountCount, _unsubscribeFocus, _unsubscribeOnline;\nfunction ownKeys(e, r) { var t = Object.keys(e); if (Object.getOwnPropertySymbols) { var o = Object.getOwnPropertySymbols(e); r && (o = o.filter(function (r) { return Object.getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? ownKeys(Object(t), !0).forEach(function (r) { _defineProperty(e, r, t[r]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(e, Object.getOwnPropertyDescriptors(t)) : ownKeys(Object(t)).forEach(function (r) { Object.defineProperty(e, r, Object.getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return typeof key === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (typeof input !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (typeof res !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n// src/queryClient.ts\n\n\n\n\n\n\n\nvar QueryClient = (_queryCache = /*#__PURE__*/new WeakMap(), _mutationCache = /*#__PURE__*/new WeakMap(), _defaultOptions = /*#__PURE__*/new WeakMap(), _queryDefaults = /*#__PURE__*/new WeakMap(), _mutationDefaults = /*#__PURE__*/new WeakMap(), _mountCount = /*#__PURE__*/new WeakMap(), _unsubscribeFocus = /*#__PURE__*/new WeakMap(), _unsubscribeOnline = /*#__PURE__*/new WeakMap(), class QueryClient {\n  constructor(config = {}) {\n    _classPrivateFieldInitSpec(this, _queryCache, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _mutationCache, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _defaultOptions, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _queryDefaults, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _mutationDefaults, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _mountCount, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _unsubscribeFocus, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldInitSpec(this, _unsubscribeOnline, {\n      writable: true,\n      value: void 0\n    });\n    _classPrivateFieldSet(this, _queryCache, config.queryCache || new _queryCache_js__WEBPACK_IMPORTED_MODULE_0__.QueryCache());\n    _classPrivateFieldSet(this, _mutationCache, config.mutationCache || new _mutationCache_js__WEBPACK_IMPORTED_MODULE_1__.MutationCache());\n    _classPrivateFieldSet(this, _defaultOptions, config.defaultOptions || {});\n    _classPrivateFieldSet(this, _queryDefaults, /* @__PURE__ */new Map());\n    _classPrivateFieldSet(this, _mutationDefaults, /* @__PURE__ */new Map());\n    _classPrivateFieldSet(this, _mountCount, 0);\n  }\n  mount() {\n    var _this$mountCount, _this$mountCount2;\n    _classPrivateFieldSet(this, _mountCount, (_this$mountCount = _classPrivateFieldGet(this, _mountCount), _this$mountCount2 = _this$mountCount++, _this$mountCount)), _this$mountCount2;\n    if (_classPrivateFieldGet(this, _mountCount) !== 1) return;\n    _classPrivateFieldSet(this, _unsubscribeFocus, _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.subscribe(async focused => {\n      if (focused) {\n        await this.resumePausedMutations();\n        _classPrivateFieldGet(this, _queryCache).onFocus();\n      }\n    }));\n    _classPrivateFieldSet(this, _unsubscribeOnline, _onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.subscribe(async online => {\n      if (online) {\n        await this.resumePausedMutations();\n        _classPrivateFieldGet(this, _queryCache).onOnline();\n      }\n    }));\n  }\n  unmount() {\n    var _this$mountCount3, _this$mountCount4;\n    _classPrivateFieldSet(this, _mountCount, (_this$mountCount3 = _classPrivateFieldGet(this, _mountCount), _this$mountCount4 = _this$mountCount3--, _this$mountCount3)), _this$mountCount4;\n    if (_classPrivateFieldGet(this, _mountCount) !== 0) return;\n    _classPrivateFieldGet(this, _unsubscribeFocus)?.call(this);\n    _classPrivateFieldSet(this, _unsubscribeFocus, void 0);\n    _classPrivateFieldGet(this, _unsubscribeOnline)?.call(this);\n    _classPrivateFieldSet(this, _unsubscribeOnline, void 0);\n  }\n  isFetching(filters) {\n    return _classPrivateFieldGet(this, _queryCache).findAll(_objectSpread(_objectSpread({}, filters), {}, {\n      fetchStatus: \"fetching\"\n    })).length;\n  }\n  isMutating(filters) {\n    return _classPrivateFieldGet(this, _mutationCache).findAll(_objectSpread(_objectSpread({}, filters), {}, {\n      status: \"pending\"\n    })).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({\n      queryKey\n    });\n    return _classPrivateFieldGet(this, _queryCache).get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = _classPrivateFieldGet(this, _queryCache).build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return _classPrivateFieldGet(this, _queryCache).findAll(filters).map(({\n      queryKey,\n      state\n    }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({\n      queryKey\n    });\n    const query = _classPrivateFieldGet(this, _queryCache).get(defaultedOptions.queryHash);\n    const prevData = query?.state.data;\n    const data = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.functionalUpdate)(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return _classPrivateFieldGet(this, _queryCache).build(this, defaultedOptions).setData(data, _objectSpread(_objectSpread({}, options), {}, {\n      manual: true\n    }));\n  }\n  setQueriesData(filters, updater, options) {\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => _classPrivateFieldGet(this, _queryCache).findAll(filters).map(({\n      queryKey\n    }) => [queryKey, this.setQueryData(queryKey, updater, options)]));\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({\n      queryKey\n    });\n    return _classPrivateFieldGet(this, _queryCache).get(options.queryHash)?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = _classPrivateFieldGet(this, _queryCache);\n    _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = _classPrivateFieldGet(this, _queryCache);\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach(query => {\n        query.reset();\n      });\n      return this.refetchQueries(_objectSpread({\n        type: \"active\"\n      }, filters), options);\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = _objectSpread({\n      revert: true\n    }, cancelOptions);\n    const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => _classPrivateFieldGet(this, _queryCache).findAll(filters).map(query => query.cancel(defaultedCancelOptions)));\n    return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => {\n      _classPrivateFieldGet(this, _queryCache).findAll(filters).forEach(query => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(_objectSpread(_objectSpread({}, filters), {}, {\n        type: filters?.refetchType ?? filters?.type ?? \"active\"\n      }), options);\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = _objectSpread(_objectSpread({}, options), {}, {\n      cancelRefetch: options.cancelRefetch ?? true\n    });\n    const promises = _notifyManager_js__WEBPACK_IMPORTED_MODULE_5__.notifyManager.batch(() => _classPrivateFieldGet(this, _queryCache).findAll(filters).filter(query => !query.isDisabled() && !query.isStatic()).map(query => {\n      let promise = query.fetch(void 0, fetchOptions);\n      if (!fetchOptions.throwOnError) {\n        promise = promise.catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n      }\n      return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n    }));\n    return Promise.all(promises).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = _classPrivateFieldGet(this, _queryCache).build(this, defaultedOptions);\n    return query.isStaleByTime((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.resolveStaleTime)(defaultedOptions.staleTime, query)) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop).catch(_utils_js__WEBPACK_IMPORTED_MODULE_4__.noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = (0,_infiniteQueryBehavior_js__WEBPACK_IMPORTED_MODULE_6__.infiniteQueryBehavior)(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (_onlineManager_js__WEBPACK_IMPORTED_MODULE_3__.onlineManager.isOnline()) {\n      return _classPrivateFieldGet(this, _mutationCache).resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return _classPrivateFieldGet(this, _queryCache);\n  }\n  getMutationCache() {\n    return _classPrivateFieldGet(this, _mutationCache);\n  }\n  getDefaultOptions() {\n    return _classPrivateFieldGet(this, _defaultOptions);\n  }\n  setDefaultOptions(options) {\n    _classPrivateFieldSet(this, _defaultOptions, options);\n  }\n  setQueryDefaults(queryKey, options) {\n    _classPrivateFieldGet(this, _queryDefaults).set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [..._classPrivateFieldGet(this, _queryDefaults).values()];\n    const result = {};\n    defaults.forEach(queryDefault => {\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    _classPrivateFieldGet(this, _mutationDefaults).set((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashKey)(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [..._classPrivateFieldGet(this, _mutationDefaults).values()];\n    const result = {};\n    defaults.forEach(queryDefault => {\n      if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.partialMatchKey)(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _classPrivateFieldGet(this, _defaultOptions).queries), this.getQueryDefaults(options.queryKey)), options), {}, {\n      _defaulted: true\n    });\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = (0,_utils_js__WEBPACK_IMPORTED_MODULE_4__.hashQueryKeyByOptions)(defaultedOptions.queryKey, defaultedOptions);\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === _utils_js__WEBPACK_IMPORTED_MODULE_4__.skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, _classPrivateFieldGet(this, _defaultOptions).mutations), options?.mutationKey && this.getMutationDefaults(options.mutationKey)), options), {}, {\n      _defaulted: true\n    });\n  }\n  clear() {\n    _classPrivateFieldGet(this, _queryCache).clear();\n    _classPrivateFieldGet(this, _mutationCache).clear();\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/queryClient.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js":
/*!*********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/removable.js ***!
  \*********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Removable: () => (/* binding */ Removable)\n/* harmony export */ });\n/* harmony import */ var _timeoutManager_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./timeoutManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/timeoutManager.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\nvar _gcTimeout;\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\n// src/removable.ts\n\n\nvar Removable = (_gcTimeout = /*#__PURE__*/new WeakMap(), class Removable {\n  constructor() {\n    _classPrivateFieldInitSpec(this, _gcTimeout, {\n      writable: true,\n      value: void 0\n    });\n  }\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if ((0,_utils_js__WEBPACK_IMPORTED_MODULE_0__.isValidTimeout)(this.gcTime)) {\n      _classPrivateFieldSet(this, _gcTimeout, _timeoutManager_js__WEBPACK_IMPORTED_MODULE_1__.timeoutManager.setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime));\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(this.gcTime || 0, newGcTime ?? (_utils_js__WEBPACK_IMPORTED_MODULE_0__.isServer ? Infinity : 5 * 60 * 1e3));\n  }\n  clearGcTimeout() {\n    if (_classPrivateFieldGet(this, _gcTimeout)) {\n      _timeoutManager_js__WEBPACK_IMPORTED_MODULE_1__.timeoutManager.clearTimeout(_classPrivateFieldGet(this, _gcTimeout));\n      _classPrivateFieldSet(this, _gcTimeout, void 0);\n    }\n  }\n});\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3JlbW92YWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ3FEO0FBQ0M7QUFDdEQsSUFBSUcsU0FBUyxJQUFBQyxVQUFBLG9CQUFBQyxPQUFBLElBQUcsTUFBWkYsU0FBUyxDQUFTO0VBQUFHLFlBQUE7SUFDcEJDLDBCQUFBLE9BQUFILFVBQVU7TUFBQUksUUFBQTtNQUFBQyxLQUFBO0lBQUE7RUFBQztFQUNYQyxPQUFPQSxDQUFBLEVBQUc7SUFDUixJQUFJLENBQUNDLGNBQWMsQ0FBQyxDQUFDO0VBQ3ZCO0VBQ0FDLFVBQVVBLENBQUEsRUFBRztJQUNYLElBQUksQ0FBQ0QsY0FBYyxDQUFDLENBQUM7SUFDckIsSUFBSVQseURBQWMsQ0FBQyxJQUFJLENBQUNXLE1BQU0sQ0FBQyxFQUFFO01BQy9CQyxxQkFBQSxLQUFJLEVBQUNWLFVBQVUsRUFBR0osOERBQWMsQ0FBQ2UsVUFBVSxDQUFDLE1BQU07UUFDaEQsSUFBSSxDQUFDQyxjQUFjLENBQUMsQ0FBQztNQUN2QixDQUFDLEVBQUUsSUFBSSxDQUFDSCxNQUFNLENBRkEsQ0FBQztJQUdqQjtFQUNGO0VBQ0FJLFlBQVlBLENBQUNDLFNBQVMsRUFBRTtJQUN0QixJQUFJLENBQUNMLE1BQU0sR0FBR00sSUFBSSxDQUFDQyxHQUFHLENBQ3BCLElBQUksQ0FBQ1AsTUFBTSxJQUFJLENBQUMsRUFDaEJLLFNBQVMsS0FBS2pCLCtDQUFRLEdBQUdvQixRQUFRLEdBQUcsQ0FBQyxHQUFHLEVBQUUsR0FBRyxHQUFHLENBQ2xELENBQUM7RUFDSDtFQUNBVixjQUFjQSxDQUFBLEVBQUc7SUFDZixJQUFJVyxxQkFBQSxLQUFJLEVBQUNsQixVQUFTLENBQUMsRUFBRTtNQUNuQkosOERBQWMsQ0FBQ3VCLFlBQVksQ0FBQ0QscUJBQUEsS0FBSSxFQUFDbEIsVUFBUyxDQUFDLENBQUM7TUFDNUNVLHFCQUFBLEtBQUksRUFBQ1YsVUFBVSxFQUFHLEtBQUssQ0FBVCxDQUFDO0lBQ2pCO0VBQ0Y7QUFDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FjaGFja3MtaG9tZXBhZ2UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3JlbW92YWJsZS5qcz81OTc4Il0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9yZW1vdmFibGUudHNcbmltcG9ydCB7IHRpbWVvdXRNYW5hZ2VyIH0gZnJvbSBcIi4vdGltZW91dE1hbmFnZXIuanNcIjtcbmltcG9ydCB7IGlzU2VydmVyLCBpc1ZhbGlkVGltZW91dCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG52YXIgUmVtb3ZhYmxlID0gY2xhc3Mge1xuICAjZ2NUaW1lb3V0O1xuICBkZXN0cm95KCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcbiAgfVxuICBzY2hlZHVsZUdjKCkge1xuICAgIHRoaXMuY2xlYXJHY1RpbWVvdXQoKTtcbiAgICBpZiAoaXNWYWxpZFRpbWVvdXQodGhpcy5nY1RpbWUpKSB7XG4gICAgICB0aGlzLiNnY1RpbWVvdXQgPSB0aW1lb3V0TWFuYWdlci5zZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgdGhpcy5vcHRpb25hbFJlbW92ZSgpO1xuICAgICAgfSwgdGhpcy5nY1RpbWUpO1xuICAgIH1cbiAgfVxuICB1cGRhdGVHY1RpbWUobmV3R2NUaW1lKSB7XG4gICAgdGhpcy5nY1RpbWUgPSBNYXRoLm1heChcbiAgICAgIHRoaXMuZ2NUaW1lIHx8IDAsXG4gICAgICBuZXdHY1RpbWUgPz8gKGlzU2VydmVyID8gSW5maW5pdHkgOiA1ICogNjAgKiAxZTMpXG4gICAgKTtcbiAgfVxuICBjbGVhckdjVGltZW91dCgpIHtcbiAgICBpZiAodGhpcy4jZ2NUaW1lb3V0KSB7XG4gICAgICB0aW1lb3V0TWFuYWdlci5jbGVhclRpbWVvdXQodGhpcy4jZ2NUaW1lb3V0KTtcbiAgICAgIHRoaXMuI2djVGltZW91dCA9IHZvaWQgMDtcbiAgICB9XG4gIH1cbn07XG5leHBvcnQge1xuICBSZW1vdmFibGVcbn07XG4vLyMgc291cmNlTWFwcGluZ1VSTD1yZW1vdmFibGUuanMubWFwIl0sIm5hbWVzIjpbInRpbWVvdXRNYW5hZ2VyIiwiaXNTZXJ2ZXIiLCJpc1ZhbGlkVGltZW91dCIsIlJlbW92YWJsZSIsIl9nY1RpbWVvdXQiLCJXZWFrTWFwIiwiY29uc3RydWN0b3IiLCJfY2xhc3NQcml2YXRlRmllbGRJbml0U3BlYyIsIndyaXRhYmxlIiwidmFsdWUiLCJkZXN0cm95IiwiY2xlYXJHY1RpbWVvdXQiLCJzY2hlZHVsZUdjIiwiZ2NUaW1lIiwiX2NsYXNzUHJpdmF0ZUZpZWxkU2V0Iiwic2V0VGltZW91dCIsIm9wdGlvbmFsUmVtb3ZlIiwidXBkYXRlR2NUaW1lIiwibmV3R2NUaW1lIiwiTWF0aCIsIm1heCIsIkluZmluaXR5IiwiX2NsYXNzUHJpdmF0ZUZpZWxkR2V0IiwiY2xlYXJUaW1lb3V0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/removable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js":
/*!*******************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/retryer.js ***!
  \*******************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   CancelledError: () => (/* binding */ CancelledError),\n/* harmony export */   canFetch: () => (/* binding */ canFetch),\n/* harmony export */   createRetryer: () => (/* binding */ createRetryer),\n/* harmony export */   isCancelledError: () => (/* binding */ isCancelledError)\n/* harmony export */ });\n/* harmony import */ var _focusManager_js__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./focusManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/focusManager.js\");\n/* harmony import */ var _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./onlineManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/onlineManager.js\");\n/* harmony import */ var _thenable_js__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./thenable.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js\");\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/retryer.ts\n\n\n\n\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let continueFn;\n  const thenable = (0,_thenable_js__WEBPACK_IMPORTED_MODULE_1__.pendingThenable)();\n  const isResolved = () => thenable.status !== \"pending\";\n  const cancel = cancelOptions => {\n    if (!isResolved()) {\n      const error = new CancelledError(cancelOptions);\n      reject(error);\n      config.onCancel?.(error);\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => _focusManager_js__WEBPACK_IMPORTED_MODULE_2__.focusManager.isFocused() && (config.networkMode === \"always\" || _onlineManager_js__WEBPACK_IMPORTED_MODULE_0__.onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = value => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = value => {\n    if (!isResolved()) {\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise(continueResolve => {\n      continueFn = value => {\n        if (isResolved() || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved()) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved()) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch(error => {\n      if (isResolved()) {\n        return;\n      }\n      const retry = config.retry ?? (_utils_js__WEBPACK_IMPORTED_MODULE_3__.isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      (0,_utils_js__WEBPACK_IMPORTED_MODULE_3__.sleep)(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    status: () => thenable.status,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/retryer.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js":
/*!************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/subscribable.js ***!
  \************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   Subscribable: () => (/* binding */ Subscribable)\n/* harmony export */ });\n// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {}\n  onUnsubscribe() {}\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3N1YnNjcmliYWJsZS5qcyIsIm1hcHBpbmdzIjoiOzs7O0FBQUE7QUFDQSxJQUFJQSxZQUFZLEdBQUcsTUFBTTtFQUN2QkMsV0FBV0EsQ0FBQSxFQUFHO0lBQ1osSUFBSSxDQUFDQyxTQUFTLEdBQUcsZUFBZ0IsSUFBSUMsR0FBRyxDQUFDLENBQUM7SUFDMUMsSUFBSSxDQUFDQyxTQUFTLEdBQUcsSUFBSSxDQUFDQSxTQUFTLENBQUNDLElBQUksQ0FBQyxJQUFJLENBQUM7RUFDNUM7RUFDQUQsU0FBU0EsQ0FBQ0UsUUFBUSxFQUFFO0lBQ2xCLElBQUksQ0FBQ0osU0FBUyxDQUFDSyxHQUFHLENBQUNELFFBQVEsQ0FBQztJQUM1QixJQUFJLENBQUNFLFdBQVcsQ0FBQyxDQUFDO0lBQ2xCLE9BQU8sTUFBTTtNQUNYLElBQUksQ0FBQ04sU0FBUyxDQUFDTyxNQUFNLENBQUNILFFBQVEsQ0FBQztNQUMvQixJQUFJLENBQUNJLGFBQWEsQ0FBQyxDQUFDO0lBQ3RCLENBQUM7RUFDSDtFQUNBQyxZQUFZQSxDQUFBLEVBQUc7SUFDYixPQUFPLElBQUksQ0FBQ1QsU0FBUyxDQUFDVSxJQUFJLEdBQUcsQ0FBQztFQUNoQztFQUNBSixXQUFXQSxDQUFBLEVBQUcsQ0FDZDtFQUNBRSxhQUFhQSxDQUFBLEVBQUcsQ0FDaEI7QUFDRixDQUFDIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FjaGFja3MtaG9tZXBhZ2UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3N1YnNjcmliYWJsZS5qcz9iZWJjIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy9zdWJzY3JpYmFibGUudHNcbnZhciBTdWJzY3JpYmFibGUgPSBjbGFzcyB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMubGlzdGVuZXJzID0gLyogQF9fUFVSRV9fICovIG5ldyBTZXQoKTtcbiAgICB0aGlzLnN1YnNjcmliZSA9IHRoaXMuc3Vic2NyaWJlLmJpbmQodGhpcyk7XG4gIH1cbiAgc3Vic2NyaWJlKGxpc3RlbmVyKSB7XG4gICAgdGhpcy5saXN0ZW5lcnMuYWRkKGxpc3RlbmVyKTtcbiAgICB0aGlzLm9uU3Vic2NyaWJlKCk7XG4gICAgcmV0dXJuICgpID0+IHtcbiAgICAgIHRoaXMubGlzdGVuZXJzLmRlbGV0ZShsaXN0ZW5lcik7XG4gICAgICB0aGlzLm9uVW5zdWJzY3JpYmUoKTtcbiAgICB9O1xuICB9XG4gIGhhc0xpc3RlbmVycygpIHtcbiAgICByZXR1cm4gdGhpcy5saXN0ZW5lcnMuc2l6ZSA+IDA7XG4gIH1cbiAgb25TdWJzY3JpYmUoKSB7XG4gIH1cbiAgb25VbnN1YnNjcmliZSgpIHtcbiAgfVxufTtcbmV4cG9ydCB7XG4gIFN1YnNjcmliYWJsZVxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXN1YnNjcmliYWJsZS5qcy5tYXAiXSwibmFtZXMiOlsiU3Vic2NyaWJhYmxlIiwiY29uc3RydWN0b3IiLCJsaXN0ZW5lcnMiLCJTZXQiLCJzdWJzY3JpYmUiLCJiaW5kIiwibGlzdGVuZXIiLCJhZGQiLCJvblN1YnNjcmliZSIsImRlbGV0ZSIsIm9uVW5zdWJzY3JpYmUiLCJoYXNMaXN0ZW5lcnMiLCJzaXplIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/subscribable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js":
/*!********************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/thenable.js ***!
  \********************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   pendingThenable: () => (/* binding */ pendingThenable),\n/* harmony export */   tryResolveSync: () => (/* binding */ tryResolveSync)\n/* harmony export */ });\n/* harmony import */ var _utils_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\");\n// src/thenable.ts\n\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {});\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = value => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = reason => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then(result => {\n    data = result;\n    return result;\n  }, _utils_js__WEBPACK_IMPORTED_MODULE_0__.noop)?.catch(_utils_js__WEBPACK_IMPORTED_MODULE_0__.noop);\n  if (data !== void 0) {\n    return {\n      data\n    };\n  }\n  return void 0;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3RoZW5hYmxlLmpzIiwibWFwcGluZ3MiOiI7Ozs7OztBQUFBO0FBQ2tDO0FBQ2xDLFNBQVNDLGVBQWVBLENBQUEsRUFBRztFQUN6QixJQUFJQyxPQUFPO0VBQ1gsSUFBSUMsTUFBTTtFQUNWLE1BQU1DLFFBQVEsR0FBRyxJQUFJQyxPQUFPLENBQUMsQ0FBQ0MsUUFBUSxFQUFFQyxPQUFPLEtBQUs7SUFDbERMLE9BQU8sR0FBR0ksUUFBUTtJQUNsQkgsTUFBTSxHQUFHSSxPQUFPO0VBQ2xCLENBQUMsQ0FBQztFQUNGSCxRQUFRLENBQUNJLE1BQU0sR0FBRyxTQUFTO0VBQzNCSixRQUFRLENBQUNLLEtBQUssQ0FBQyxNQUFNLENBQ3JCLENBQUMsQ0FBQztFQUNGLFNBQVNDLFFBQVFBLENBQUNDLElBQUksRUFBRTtJQUN0QkMsTUFBTSxDQUFDQyxNQUFNLENBQUNULFFBQVEsRUFBRU8sSUFBSSxDQUFDO0lBQzdCLE9BQU9QLFFBQVEsQ0FBQ0YsT0FBTztJQUN2QixPQUFPRSxRQUFRLENBQUNELE1BQU07RUFDeEI7RUFDQUMsUUFBUSxDQUFDRixPQUFPLEdBQUlZLEtBQUssSUFBSztJQUM1QkosUUFBUSxDQUFDO01BQ1BGLE1BQU0sRUFBRSxXQUFXO01BQ25CTTtJQUNGLENBQUMsQ0FBQztJQUNGWixPQUFPLENBQUNZLEtBQUssQ0FBQztFQUNoQixDQUFDO0VBQ0RWLFFBQVEsQ0FBQ0QsTUFBTSxHQUFJWSxNQUFNLElBQUs7SUFDNUJMLFFBQVEsQ0FBQztNQUNQRixNQUFNLEVBQUUsVUFBVTtNQUNsQk87SUFDRixDQUFDLENBQUM7SUFDRlosTUFBTSxDQUFDWSxNQUFNLENBQUM7RUFDaEIsQ0FBQztFQUNELE9BQU9YLFFBQVE7QUFDakI7QUFDQSxTQUFTWSxjQUFjQSxDQUFDQyxPQUFPLEVBQUU7RUFDL0IsSUFBSU4sSUFBSTtFQUNSTSxPQUFPLENBQUNDLElBQUksQ0FBRUMsTUFBTSxJQUFLO0lBQ3ZCUixJQUFJLEdBQUdRLE1BQU07SUFDYixPQUFPQSxNQUFNO0VBQ2YsQ0FBQyxFQUFFbkIsMkNBQUksQ0FBQyxFQUFFUyxLQUFLLENBQUNULDJDQUFJLENBQUM7RUFDckIsSUFBSVcsSUFBSSxLQUFLLEtBQUssQ0FBQyxFQUFFO0lBQ25CLE9BQU87TUFBRUE7SUFBSyxDQUFDO0VBQ2pCO0VBQ0EsT0FBTyxLQUFLLENBQUM7QUFDZiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhY2hhY2tzLWhvbWVwYWdlLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi90aGVuYWJsZS5qcz9iOTFlIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy90aGVuYWJsZS50c1xuaW1wb3J0IHsgbm9vcCB9IGZyb20gXCIuL3V0aWxzLmpzXCI7XG5mdW5jdGlvbiBwZW5kaW5nVGhlbmFibGUoKSB7XG4gIGxldCByZXNvbHZlO1xuICBsZXQgcmVqZWN0O1xuICBjb25zdCB0aGVuYWJsZSA9IG5ldyBQcm9taXNlKChfcmVzb2x2ZSwgX3JlamVjdCkgPT4ge1xuICAgIHJlc29sdmUgPSBfcmVzb2x2ZTtcbiAgICByZWplY3QgPSBfcmVqZWN0O1xuICB9KTtcbiAgdGhlbmFibGUuc3RhdHVzID0gXCJwZW5kaW5nXCI7XG4gIHRoZW5hYmxlLmNhdGNoKCgpID0+IHtcbiAgfSk7XG4gIGZ1bmN0aW9uIGZpbmFsaXplKGRhdGEpIHtcbiAgICBPYmplY3QuYXNzaWduKHRoZW5hYmxlLCBkYXRhKTtcbiAgICBkZWxldGUgdGhlbmFibGUucmVzb2x2ZTtcbiAgICBkZWxldGUgdGhlbmFibGUucmVqZWN0O1xuICB9XG4gIHRoZW5hYmxlLnJlc29sdmUgPSAodmFsdWUpID0+IHtcbiAgICBmaW5hbGl6ZSh7XG4gICAgICBzdGF0dXM6IFwiZnVsZmlsbGVkXCIsXG4gICAgICB2YWx1ZVxuICAgIH0pO1xuICAgIHJlc29sdmUodmFsdWUpO1xuICB9O1xuICB0aGVuYWJsZS5yZWplY3QgPSAocmVhc29uKSA9PiB7XG4gICAgZmluYWxpemUoe1xuICAgICAgc3RhdHVzOiBcInJlamVjdGVkXCIsXG4gICAgICByZWFzb25cbiAgICB9KTtcbiAgICByZWplY3QocmVhc29uKTtcbiAgfTtcbiAgcmV0dXJuIHRoZW5hYmxlO1xufVxuZnVuY3Rpb24gdHJ5UmVzb2x2ZVN5bmMocHJvbWlzZSkge1xuICBsZXQgZGF0YTtcbiAgcHJvbWlzZS50aGVuKChyZXN1bHQpID0+IHtcbiAgICBkYXRhID0gcmVzdWx0O1xuICAgIHJldHVybiByZXN1bHQ7XG4gIH0sIG5vb3ApPy5jYXRjaChub29wKTtcbiAgaWYgKGRhdGEgIT09IHZvaWQgMCkge1xuICAgIHJldHVybiB7IGRhdGEgfTtcbiAgfVxuICByZXR1cm4gdm9pZCAwO1xufVxuZXhwb3J0IHtcbiAgcGVuZGluZ1RoZW5hYmxlLFxuICB0cnlSZXNvbHZlU3luY1xufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRoZW5hYmxlLmpzLm1hcCJdLCJuYW1lcyI6WyJub29wIiwicGVuZGluZ1RoZW5hYmxlIiwicmVzb2x2ZSIsInJlamVjdCIsInRoZW5hYmxlIiwiUHJvbWlzZSIsIl9yZXNvbHZlIiwiX3JlamVjdCIsInN0YXR1cyIsImNhdGNoIiwiZmluYWxpemUiLCJkYXRhIiwiT2JqZWN0IiwiYXNzaWduIiwidmFsdWUiLCJyZWFzb24iLCJ0cnlSZXNvbHZlU3luYyIsInByb21pc2UiLCJ0aGVuIiwicmVzdWx0Il0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/thenable.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/timeoutManager.js":
/*!**************************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/timeoutManager.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   TimeoutManager: () => (/* binding */ TimeoutManager),\n/* harmony export */   defaultTimeoutProvider: () => (/* binding */ defaultTimeoutProvider),\n/* harmony export */   systemSetTimeoutZero: () => (/* binding */ systemSetTimeoutZero),\n/* harmony export */   timeoutManager: () => (/* binding */ timeoutManager)\n/* harmony export */ });\nvar _provider, _providerCalled;\nfunction _classPrivateFieldInitSpec(obj, privateMap, value) { _checkPrivateRedeclaration(obj, privateMap); privateMap.set(obj, value); }\nfunction _checkPrivateRedeclaration(obj, privateCollection) { if (privateCollection.has(obj)) { throw new TypeError(\"Cannot initialize the same private elements twice on an object\"); } }\nfunction _classPrivateFieldSet(receiver, privateMap, value) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"set\"); _classApplyDescriptorSet(receiver, descriptor, value); return value; }\nfunction _classApplyDescriptorSet(receiver, descriptor, value) { if (descriptor.set) { descriptor.set.call(receiver, value); } else { if (!descriptor.writable) { throw new TypeError(\"attempted to set read only private field\"); } descriptor.value = value; } }\nfunction _classPrivateFieldGet(receiver, privateMap) { var descriptor = _classExtractFieldDescriptor(receiver, privateMap, \"get\"); return _classApplyDescriptorGet(receiver, descriptor); }\nfunction _classExtractFieldDescriptor(receiver, privateMap, action) { if (!privateMap.has(receiver)) { throw new TypeError(\"attempted to \" + action + \" private field on non-instance\"); } return privateMap.get(receiver); }\nfunction _classApplyDescriptorGet(receiver, descriptor) { if (descriptor.get) { return descriptor.get.call(receiver); } return descriptor.value; }\n// src/timeoutManager.ts\nvar defaultTimeoutProvider = {\n  // We need the wrapper function syntax below instead of direct references to\n  // global setTimeout etc.\n  //\n  // BAD: `setTimeout: setTimeout`\n  // GOOD: `setTimeout: (cb, delay) => setTimeout(cb, delay)`\n  //\n  // If we use direct references here, then anything that wants to spy on or\n  // replace the global setTimeout (like tests) won't work since we'll already\n  // have a hard reference to the original implementation at the time when this\n  // file was imported.\n  setTimeout: (callback, delay) => setTimeout(callback, delay),\n  clearTimeout: timeoutId => clearTimeout(timeoutId),\n  setInterval: (callback, delay) => setInterval(callback, delay),\n  clearInterval: intervalId => clearInterval(intervalId)\n};\nvar TimeoutManager = (_provider = /*#__PURE__*/new WeakMap(), _providerCalled = /*#__PURE__*/new WeakMap(), class TimeoutManager {\n  constructor() {\n    // We cannot have TimeoutManager<T> as we must instantiate it with a concrete\n    // type at app boot; and if we leave that type, then any new timer provider\n    // would need to support ReturnType<typeof setTimeout>, which is infeasible.\n    //\n    // We settle for type safety for the TimeoutProvider type, and accept that\n    // this class is unsafe internally to allow for extension.\n    _classPrivateFieldInitSpec(this, _provider, {\n      writable: true,\n      value: defaultTimeoutProvider\n    });\n    _classPrivateFieldInitSpec(this, _providerCalled, {\n      writable: true,\n      value: false\n    });\n  }\n  setTimeoutProvider(provider) {\n    if (true) {\n      if (_classPrivateFieldGet(this, _providerCalled) && provider !== _classPrivateFieldGet(this, _provider)) {\n        console.error(`[timeoutManager]: Switching provider after calls to previous provider might result in unexpected behavior.`, {\n          previous: _classPrivateFieldGet(this, _provider),\n          provider\n        });\n      }\n    }\n    _classPrivateFieldSet(this, _provider, provider);\n    if (true) {\n      _classPrivateFieldSet(this, _providerCalled, false);\n    }\n  }\n  setTimeout(callback, delay) {\n    if (true) {\n      _classPrivateFieldSet(this, _providerCalled, true);\n    }\n    return _classPrivateFieldGet(this, _provider).setTimeout(callback, delay);\n  }\n  clearTimeout(timeoutId) {\n    _classPrivateFieldGet(this, _provider).clearTimeout(timeoutId);\n  }\n  setInterval(callback, delay) {\n    if (true) {\n      _classPrivateFieldSet(this, _providerCalled, true);\n    }\n    return _classPrivateFieldGet(this, _provider).setInterval(callback, delay);\n  }\n  clearInterval(intervalId) {\n    _classPrivateFieldGet(this, _provider).clearInterval(intervalId);\n  }\n});\nvar timeoutManager = new TimeoutManager();\nfunction systemSetTimeoutZero(callback) {\n  setTimeout(callback, 0);\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3F1ZXJ5LWNvcmUvYnVpbGQvbW9kZXJuL3RpbWVvdXRNYW5hZ2VyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7OztBQUFBO0FBQ0EsSUFBSUEsc0JBQXNCLEdBQUc7RUFDM0I7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQUMsVUFBVSxFQUFFQSxDQUFDQyxRQUFRLEVBQUVDLEtBQUssS0FBS0YsVUFBVSxDQUFDQyxRQUFRLEVBQUVDLEtBQUssQ0FBQztFQUM1REMsWUFBWSxFQUFHQyxTQUFTLElBQUtELFlBQVksQ0FBQ0MsU0FBUyxDQUFDO0VBQ3BEQyxXQUFXLEVBQUVBLENBQUNKLFFBQVEsRUFBRUMsS0FBSyxLQUFLRyxXQUFXLENBQUNKLFFBQVEsRUFBRUMsS0FBSyxDQUFDO0VBQzlESSxhQUFhLEVBQUdDLFVBQVUsSUFBS0QsYUFBYSxDQUFDQyxVQUFVO0FBQ3pELENBQUM7QUFDRCxJQUFJQyxjQUFjLElBQUFDLFNBQUEsb0JBQUFDLE9BQUEsSUFBQUMsZUFBQSxvQkFBQUQsT0FBQSxJQUFHLE1BQWpCRixjQUFjLENBQVM7RUFBQUksWUFBQTtJQUN6QjtJQUNBO0lBQ0E7SUFDQTtJQUNBO0lBQ0E7SUFBQUMsMEJBQUEsT0FBQUosU0FBQTtNQUFBSyxRQUFBO01BQUFDLEtBQUEsRUFDWWhCO0lBQXNCO0lBQUFjLDBCQUFBLE9BQUFGLGVBQUE7TUFBQUcsUUFBQTtNQUFBQyxLQUFBLEVBQ2hCO0lBQUs7RUFBQTtFQUN2QkMsa0JBQWtCQSxDQUFDQyxRQUFRLEVBQUU7SUFDM0IsSUFBSSxNQUF1QztNQUN6QyxJQUFJQyxxQkFBQSxLQUFJLEVBQUFQLGVBQUEsS0FBb0JNLFFBQVEsS0FBQUMscUJBQUEsQ0FBSyxJQUFJLEVBQUFULFNBQUEsQ0FBVSxFQUFFO1FBQ3ZEVSxPQUFPLENBQUNDLEtBQUssQ0FDViw0R0FBMkcsRUFDNUc7VUFBRUMsUUFBUSxFQUFBSCxxQkFBQSxDQUFFLElBQUksRUFBQVQsU0FBQSxDQUFVO1VBQUVRO1FBQVMsQ0FDdkMsQ0FBQztNQUNIO0lBQ0Y7SUFDQUsscUJBQUEsS0FBSSxFQUFBYixTQUFBLEVBQWFRLFFBQVE7SUFDekIsSUFBSSxNQUF1QztNQUN6Q0sscUJBQUEsS0FBSSxFQUFBWCxlQUFBLEVBQW1CLEtBQUs7SUFDOUI7RUFDRjtFQUNBWCxVQUFVQSxDQUFDQyxRQUFRLEVBQUVDLEtBQUssRUFBRTtJQUMxQixJQUFJLE1BQXVDO01BQ3pDb0IscUJBQUEsS0FBSSxFQUFBWCxlQUFBLEVBQW1CLElBQUk7SUFDN0I7SUFDQSxPQUFPTyxxQkFBQSxLQUFJLEVBQUFULFNBQUEsRUFBV1QsVUFBVSxDQUFDQyxRQUFRLEVBQUVDLEtBQUssQ0FBQztFQUNuRDtFQUNBQyxZQUFZQSxDQUFDQyxTQUFTLEVBQUU7SUFDdEJjLHFCQUFBLEtBQUksRUFBQVQsU0FBQSxFQUFXTixZQUFZLENBQUNDLFNBQVMsQ0FBQztFQUN4QztFQUNBQyxXQUFXQSxDQUFDSixRQUFRLEVBQUVDLEtBQUssRUFBRTtJQUMzQixJQUFJLE1BQXVDO01BQ3pDb0IscUJBQUEsS0FBSSxFQUFBWCxlQUFBLEVBQW1CLElBQUk7SUFDN0I7SUFDQSxPQUFPTyxxQkFBQSxLQUFJLEVBQUFULFNBQUEsRUFBV0osV0FBVyxDQUFDSixRQUFRLEVBQUVDLEtBQUssQ0FBQztFQUNwRDtFQUNBSSxhQUFhQSxDQUFDQyxVQUFVLEVBQUU7SUFDeEJXLHFCQUFBLEtBQUksRUFBQVQsU0FBQSxFQUFXSCxhQUFhLENBQUNDLFVBQVUsQ0FBQztFQUMxQztBQUNGLENBQUM7QUFDRCxJQUFJZ0IsY0FBYyxHQUFHLElBQUlmLGNBQWMsQ0FBQyxDQUFDO0FBQ3pDLFNBQVNnQixvQkFBb0JBLENBQUN2QixRQUFRLEVBQUU7RUFDdENELFVBQVUsQ0FBQ0MsUUFBUSxFQUFFLENBQUMsQ0FBQztBQUN6QiIsInNvdXJjZXMiOlsid2VicGFjazovL3NhY2hhY2tzLWhvbWVwYWdlLy4vbm9kZV9tb2R1bGVzL0B0YW5zdGFjay9xdWVyeS1jb3JlL2J1aWxkL21vZGVybi90aW1lb3V0TWFuYWdlci5qcz82N2VhIl0sInNvdXJjZXNDb250ZW50IjpbIi8vIHNyYy90aW1lb3V0TWFuYWdlci50c1xudmFyIGRlZmF1bHRUaW1lb3V0UHJvdmlkZXIgPSB7XG4gIC8vIFdlIG5lZWQgdGhlIHdyYXBwZXIgZnVuY3Rpb24gc3ludGF4IGJlbG93IGluc3RlYWQgb2YgZGlyZWN0IHJlZmVyZW5jZXMgdG9cbiAgLy8gZ2xvYmFsIHNldFRpbWVvdXQgZXRjLlxuICAvL1xuICAvLyBCQUQ6IGBzZXRUaW1lb3V0OiBzZXRUaW1lb3V0YFxuICAvLyBHT09EOiBgc2V0VGltZW91dDogKGNiLCBkZWxheSkgPT4gc2V0VGltZW91dChjYiwgZGVsYXkpYFxuICAvL1xuICAvLyBJZiB3ZSB1c2UgZGlyZWN0IHJlZmVyZW5jZXMgaGVyZSwgdGhlbiBhbnl0aGluZyB0aGF0IHdhbnRzIHRvIHNweSBvbiBvclxuICAvLyByZXBsYWNlIHRoZSBnbG9iYWwgc2V0VGltZW91dCAobGlrZSB0ZXN0cykgd29uJ3Qgd29yayBzaW5jZSB3ZSdsbCBhbHJlYWR5XG4gIC8vIGhhdmUgYSBoYXJkIHJlZmVyZW5jZSB0byB0aGUgb3JpZ2luYWwgaW1wbGVtZW50YXRpb24gYXQgdGhlIHRpbWUgd2hlbiB0aGlzXG4gIC8vIGZpbGUgd2FzIGltcG9ydGVkLlxuICBzZXRUaW1lb3V0OiAoY2FsbGJhY2ssIGRlbGF5KSA9PiBzZXRUaW1lb3V0KGNhbGxiYWNrLCBkZWxheSksXG4gIGNsZWFyVGltZW91dDogKHRpbWVvdXRJZCkgPT4gY2xlYXJUaW1lb3V0KHRpbWVvdXRJZCksXG4gIHNldEludGVydmFsOiAoY2FsbGJhY2ssIGRlbGF5KSA9PiBzZXRJbnRlcnZhbChjYWxsYmFjaywgZGVsYXkpLFxuICBjbGVhckludGVydmFsOiAoaW50ZXJ2YWxJZCkgPT4gY2xlYXJJbnRlcnZhbChpbnRlcnZhbElkKVxufTtcbnZhciBUaW1lb3V0TWFuYWdlciA9IGNsYXNzIHtcbiAgLy8gV2UgY2Fubm90IGhhdmUgVGltZW91dE1hbmFnZXI8VD4gYXMgd2UgbXVzdCBpbnN0YW50aWF0ZSBpdCB3aXRoIGEgY29uY3JldGVcbiAgLy8gdHlwZSBhdCBhcHAgYm9vdDsgYW5kIGlmIHdlIGxlYXZlIHRoYXQgdHlwZSwgdGhlbiBhbnkgbmV3IHRpbWVyIHByb3ZpZGVyXG4gIC8vIHdvdWxkIG5lZWQgdG8gc3VwcG9ydCBSZXR1cm5UeXBlPHR5cGVvZiBzZXRUaW1lb3V0Piwgd2hpY2ggaXMgaW5mZWFzaWJsZS5cbiAgLy9cbiAgLy8gV2Ugc2V0dGxlIGZvciB0eXBlIHNhZmV0eSBmb3IgdGhlIFRpbWVvdXRQcm92aWRlciB0eXBlLCBhbmQgYWNjZXB0IHRoYXRcbiAgLy8gdGhpcyBjbGFzcyBpcyB1bnNhZmUgaW50ZXJuYWxseSB0byBhbGxvdyBmb3IgZXh0ZW5zaW9uLlxuICAjcHJvdmlkZXIgPSBkZWZhdWx0VGltZW91dFByb3ZpZGVyO1xuICAjcHJvdmlkZXJDYWxsZWQgPSBmYWxzZTtcbiAgc2V0VGltZW91dFByb3ZpZGVyKHByb3ZpZGVyKSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgaWYgKHRoaXMuI3Byb3ZpZGVyQ2FsbGVkICYmIHByb3ZpZGVyICE9PSB0aGlzLiNwcm92aWRlcikge1xuICAgICAgICBjb25zb2xlLmVycm9yKFxuICAgICAgICAgIGBbdGltZW91dE1hbmFnZXJdOiBTd2l0Y2hpbmcgcHJvdmlkZXIgYWZ0ZXIgY2FsbHMgdG8gcHJldmlvdXMgcHJvdmlkZXIgbWlnaHQgcmVzdWx0IGluIHVuZXhwZWN0ZWQgYmVoYXZpb3IuYCxcbiAgICAgICAgICB7IHByZXZpb3VzOiB0aGlzLiNwcm92aWRlciwgcHJvdmlkZXIgfVxuICAgICAgICApO1xuICAgICAgfVxuICAgIH1cbiAgICB0aGlzLiNwcm92aWRlciA9IHByb3ZpZGVyO1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gXCJwcm9kdWN0aW9uXCIpIHtcbiAgICAgIHRoaXMuI3Byb3ZpZGVyQ2FsbGVkID0gZmFsc2U7XG4gICAgfVxuICB9XG4gIHNldFRpbWVvdXQoY2FsbGJhY2ssIGRlbGF5KSB7XG4gICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WICE9PSBcInByb2R1Y3Rpb25cIikge1xuICAgICAgdGhpcy4jcHJvdmlkZXJDYWxsZWQgPSB0cnVlO1xuICAgIH1cbiAgICByZXR1cm4gdGhpcy4jcHJvdmlkZXIuc2V0VGltZW91dChjYWxsYmFjaywgZGVsYXkpO1xuICB9XG4gIGNsZWFyVGltZW91dCh0aW1lb3V0SWQpIHtcbiAgICB0aGlzLiNwcm92aWRlci5jbGVhclRpbWVvdXQodGltZW91dElkKTtcbiAgfVxuICBzZXRJbnRlcnZhbChjYWxsYmFjaywgZGVsYXkpIHtcbiAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgIT09IFwicHJvZHVjdGlvblwiKSB7XG4gICAgICB0aGlzLiNwcm92aWRlckNhbGxlZCA9IHRydWU7XG4gICAgfVxuICAgIHJldHVybiB0aGlzLiNwcm92aWRlci5zZXRJbnRlcnZhbChjYWxsYmFjaywgZGVsYXkpO1xuICB9XG4gIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCkge1xuICAgIHRoaXMuI3Byb3ZpZGVyLmNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCk7XG4gIH1cbn07XG52YXIgdGltZW91dE1hbmFnZXIgPSBuZXcgVGltZW91dE1hbmFnZXIoKTtcbmZ1bmN0aW9uIHN5c3RlbVNldFRpbWVvdXRaZXJvKGNhbGxiYWNrKSB7XG4gIHNldFRpbWVvdXQoY2FsbGJhY2ssIDApO1xufVxuZXhwb3J0IHtcbiAgVGltZW91dE1hbmFnZXIsXG4gIGRlZmF1bHRUaW1lb3V0UHJvdmlkZXIsXG4gIHN5c3RlbVNldFRpbWVvdXRaZXJvLFxuICB0aW1lb3V0TWFuYWdlclxufTtcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPXRpbWVvdXRNYW5hZ2VyLmpzLm1hcCJdLCJuYW1lcyI6WyJkZWZhdWx0VGltZW91dFByb3ZpZGVyIiwic2V0VGltZW91dCIsImNhbGxiYWNrIiwiZGVsYXkiLCJjbGVhclRpbWVvdXQiLCJ0aW1lb3V0SWQiLCJzZXRJbnRlcnZhbCIsImNsZWFySW50ZXJ2YWwiLCJpbnRlcnZhbElkIiwiVGltZW91dE1hbmFnZXIiLCJfcHJvdmlkZXIiLCJXZWFrTWFwIiwiX3Byb3ZpZGVyQ2FsbGVkIiwiY29uc3RydWN0b3IiLCJfY2xhc3NQcml2YXRlRmllbGRJbml0U3BlYyIsIndyaXRhYmxlIiwidmFsdWUiLCJzZXRUaW1lb3V0UHJvdmlkZXIiLCJwcm92aWRlciIsIl9jbGFzc1ByaXZhdGVGaWVsZEdldCIsImNvbnNvbGUiLCJlcnJvciIsInByZXZpb3VzIiwiX2NsYXNzUHJpdmF0ZUZpZWxkU2V0IiwidGltZW91dE1hbmFnZXIiLCJzeXN0ZW1TZXRUaW1lb3V0WmVybyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/timeoutManager.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js":
/*!*****************************************************************!*\
  !*** ./node_modules/@tanstack/query-core/build/modern/utils.js ***!
  \*****************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   addToEnd: () => (/* binding */ addToEnd),\n/* harmony export */   addToStart: () => (/* binding */ addToStart),\n/* harmony export */   ensureQueryFn: () => (/* binding */ ensureQueryFn),\n/* harmony export */   functionalUpdate: () => (/* binding */ functionalUpdate),\n/* harmony export */   hashKey: () => (/* binding */ hashKey),\n/* harmony export */   hashQueryKeyByOptions: () => (/* binding */ hashQueryKeyByOptions),\n/* harmony export */   isPlainArray: () => (/* binding */ isPlainArray),\n/* harmony export */   isPlainObject: () => (/* binding */ isPlainObject),\n/* harmony export */   isServer: () => (/* binding */ isServer),\n/* harmony export */   isValidTimeout: () => (/* binding */ isValidTimeout),\n/* harmony export */   keepPreviousData: () => (/* binding */ keepPreviousData),\n/* harmony export */   matchMutation: () => (/* binding */ matchMutation),\n/* harmony export */   matchQuery: () => (/* binding */ matchQuery),\n/* harmony export */   noop: () => (/* binding */ noop),\n/* harmony export */   partialMatchKey: () => (/* binding */ partialMatchKey),\n/* harmony export */   replaceData: () => (/* binding */ replaceData),\n/* harmony export */   replaceEqualDeep: () => (/* binding */ replaceEqualDeep),\n/* harmony export */   resolveEnabled: () => (/* binding */ resolveEnabled),\n/* harmony export */   resolveStaleTime: () => (/* binding */ resolveStaleTime),\n/* harmony export */   shallowEqualObjects: () => (/* binding */ shallowEqualObjects),\n/* harmony export */   shouldThrowError: () => (/* binding */ shouldThrowError),\n/* harmony export */   skipToken: () => (/* binding */ skipToken),\n/* harmony export */   sleep: () => (/* binding */ sleep),\n/* harmony export */   timeUntilStale: () => (/* binding */ timeUntilStale)\n/* harmony export */ });\n/* harmony import */ var _timeoutManager_js__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./timeoutManager.js */ \"(ssr)/./node_modules/@tanstack/query-core/build/modern/timeoutManager.js\");\n// src/utils.ts\n\nvar isServer =  true || 0;\nfunction noop() {}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const {\n    exact,\n    status,\n    predicate,\n    mutationKey\n  } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(queryKey, (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n    result[key] = val[key];\n    return result;\n  }, {}) : val);\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every(key => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nvar hasOwn = Object.prototype.hasOwnProperty;\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (!array && !(isPlainObject(a) && isPlainObject(b))) return b;\n  const aItems = array ? a : Object.keys(a);\n  const aSize = aItems.length;\n  const bItems = array ? b : Object.keys(b);\n  const bSize = bItems.length;\n  const copy = array ? new Array(bSize) : {};\n  let equalItems = 0;\n  for (let i = 0; i < bSize; i++) {\n    const key = array ? i : bItems[i];\n    const aItem = a[key];\n    const bItem = b[key];\n    if (aItem === bItem) {\n      copy[key] = aItem;\n      if (array ? i < aSize : hasOwn.call(a, key)) equalItems++;\n      continue;\n    }\n    if (aItem === null || bItem === null || typeof aItem !== \"object\" || typeof bItem !== \"object\") {\n      copy[key] = bItem;\n      continue;\n    }\n    const v = replaceEqualDeep(aItem, bItem);\n    copy[key] = v;\n    if (v === aItem) equalItems++;\n  }\n  return aSize === bSize && equalItems === aSize ? a : copy;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise(resolve => {\n    _timeoutManager_js__WEBPACK_IMPORTED_MODULE_0__.timeoutManager.setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (true) {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(`Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`);\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (true) {\n    if (options.queryFn === skipToken) {\n      console.error(`Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`);\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/query-core/build/modern/utils.js\n");

/***/ }),

/***/ "(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js":
/*!********************************************************************************!*\
  !*** ./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   QueryClientContext: () => (/* binding */ QueryClientContext),\n/* harmony export */   QueryClientProvider: () => (/* binding */ QueryClientProvider),\n/* harmony export */   useQueryClient: () => (/* binding */ useQueryClient)\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react.js\");\n/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ \"(ssr)/./node_modules/next/dist/server/future/route-modules/app-page/vendored/ssr/react-jsx-runtime.js\");\n/* __next_internal_client_entry_do_not_use__ QueryClientContext,QueryClientProvider,useQueryClient auto */ // src/QueryClientProvider.tsx\n\n\nvar QueryClientContext = /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_0__.createContext(void 0);\nvar useQueryClient = (queryClient)=>{\n    const client = react__WEBPACK_IMPORTED_MODULE_0__.useContext(QueryClientContext);\n    if (queryClient) {\n        return queryClient;\n    }\n    if (!client) {\n        throw new Error(\"No QueryClient set, use QueryClientProvider to set one\");\n    }\n    return client;\n};\nvar QueryClientProvider = ({ client, children })=>{\n    react__WEBPACK_IMPORTED_MODULE_0__.useEffect(()=>{\n        client.mount();\n        return ()=>{\n            client.unmount();\n        };\n    }, [\n        client\n    ]);\n    return /* @__PURE__ */ (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(QueryClientContext.Provider, {\n        value: client,\n        children\n    });\n};\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUNsaWVudFByb3ZpZGVyLmpzIiwibWFwcGluZ3MiOiI7Ozs7Ozs7OzJHQUVBO0FBQzhCO0FBQ1M7QUFDdkMsSUFBSUUscUJBQWtCLGNBQUdGLGdEQUFtQixDQUMxQyxLQUFLO0FBRVAsSUFBSUksaUJBQWtCQyxDQUFBQTtJQUNwQixNQUFNQyxTQUFTTiw2Q0FBZ0IsQ0FBQ0U7SUFDaEMsSUFBSUcsYUFBYTtRQUNmLE9BQU9BO0lBQ1Q7SUFDQSxJQUFJLENBQUNDLFFBQVE7UUFDWCxNQUFNLElBQUlFLE1BQU07SUFDbEI7SUFDQSxPQUFPRjtBQUNUO0FBQ0EsSUFBSUcsc0JBQXNCQSxDQUFDLEVBQ3pCSCxNQUFNLEVBQ05JLFFBQUFBLEVBQ0Q7SUFDQ1YsNENBQWUsQ0FBQztRQUNkTSxPQUFPTSxLQUFLO1FBQ1osT0FBTztZQUNMTixPQUFPTyxPQUFPO1FBQ2hCO0lBQ0YsR0FBRztRQUFDUDtLQUFPO0lBQ1gsT0FBTyxnQkFBZ0JMLHNEQUFHQSxDQUFDQyxtQkFBbUJZLFFBQVEsRUFBRTtRQUFFQyxPQUFPVDtRQUFRSTtJQUFTO0FBQ3BGO0FBSWdCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2FjaGFja3MtaG9tZXBhZ2UvLi9ub2RlX21vZHVsZXMvQHRhbnN0YWNrL3JlYWN0LXF1ZXJ5L2J1aWxkL21vZGVybi9RdWVyeUNsaWVudFByb3ZpZGVyLmpzPzE4ZDYiXSwic291cmNlc0NvbnRlbnQiOlsiXCJ1c2UgY2xpZW50XCI7XG5cbi8vIHNyYy9RdWVyeUNsaWVudFByb3ZpZGVyLnRzeFxuaW1wb3J0ICogYXMgUmVhY3QgZnJvbSBcInJlYWN0XCI7XG5pbXBvcnQgeyBqc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbnZhciBRdWVyeUNsaWVudENvbnRleHQgPSBSZWFjdC5jcmVhdGVDb250ZXh0KFxuICB2b2lkIDBcbik7XG52YXIgdXNlUXVlcnlDbGllbnQgPSAocXVlcnlDbGllbnQpID0+IHtcbiAgY29uc3QgY2xpZW50ID0gUmVhY3QudXNlQ29udGV4dChRdWVyeUNsaWVudENvbnRleHQpO1xuICBpZiAocXVlcnlDbGllbnQpIHtcbiAgICByZXR1cm4gcXVlcnlDbGllbnQ7XG4gIH1cbiAgaWYgKCFjbGllbnQpIHtcbiAgICB0aHJvdyBuZXcgRXJyb3IoXCJObyBRdWVyeUNsaWVudCBzZXQsIHVzZSBRdWVyeUNsaWVudFByb3ZpZGVyIHRvIHNldCBvbmVcIik7XG4gIH1cbiAgcmV0dXJuIGNsaWVudDtcbn07XG52YXIgUXVlcnlDbGllbnRQcm92aWRlciA9ICh7XG4gIGNsaWVudCxcbiAgY2hpbGRyZW5cbn0pID0+IHtcbiAgUmVhY3QudXNlRWZmZWN0KCgpID0+IHtcbiAgICBjbGllbnQubW91bnQoKTtcbiAgICByZXR1cm4gKCkgPT4ge1xuICAgICAgY2xpZW50LnVubW91bnQoKTtcbiAgICB9O1xuICB9LCBbY2xpZW50XSk7XG4gIHJldHVybiAvKiBAX19QVVJFX18gKi8ganN4KFF1ZXJ5Q2xpZW50Q29udGV4dC5Qcm92aWRlciwgeyB2YWx1ZTogY2xpZW50LCBjaGlsZHJlbiB9KTtcbn07XG5leHBvcnQge1xuICBRdWVyeUNsaWVudENvbnRleHQsXG4gIFF1ZXJ5Q2xpZW50UHJvdmlkZXIsXG4gIHVzZVF1ZXJ5Q2xpZW50XG59O1xuLy8jIHNvdXJjZU1hcHBpbmdVUkw9UXVlcnlDbGllbnRQcm92aWRlci5qcy5tYXAiXSwibmFtZXMiOlsiUmVhY3QiLCJqc3giLCJRdWVyeUNsaWVudENvbnRleHQiLCJjcmVhdGVDb250ZXh0IiwidXNlUXVlcnlDbGllbnQiLCJxdWVyeUNsaWVudCIsImNsaWVudCIsInVzZUNvbnRleHQiLCJFcnJvciIsIlF1ZXJ5Q2xpZW50UHJvdmlkZXIiLCJjaGlsZHJlbiIsInVzZUVmZmVjdCIsIm1vdW50IiwidW5tb3VudCIsIlByb3ZpZGVyIiwidmFsdWUiXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/@tanstack/react-query/build/modern/QueryClientProvider.js\n");

/***/ })

};
;